{"version":3,"sources":["webpack:///./src/services/physical-tokens.ts","webpack:///./src/views/Tokens.vue","webpack:///./src/views/Tokens.vue?f50f","webpack:///./src/views/Tokens.vue?fcfc"],"names":["PhysicalTokenService","cacheTimeout","page","pagesize","query","params","String","encodeURIComponent","this","_get","fields","ids","join","_post","additionalCardNumber","physicalTokenService","resourceType","basePath","service","listParameters","showDetail","showSearch","components","ZeitList","data","id","label","mobileLevel","hideDesktop","formatter","token","employee__first_name","employee__last_name","render"],"mappings":"8NAmBMA,E,wDACF,iDACI,cAAM,oCACN,EAAKC,aAAe,QAFxB,E,sDAKgE,IAA/BC,EAA+B,uDAA1B,EAAGC,EAAuB,uDAAd,IAAMC,EAAQ,uDAAF,GACpDC,EACF,UAAYC,OAAOH,GACnB,WAAaG,QAAQJ,EAAO,GAAKC,GACjC,MAAQI,mBAAmBD,OAAOF,IAEtC,OAAOI,KAAKC,KAAKJ,K,iCAGkBA,GACnCA,EAASA,GAAU,GAEnBA,EAAOF,SAAWE,EAAOF,UAAY,IACrCE,EAAOH,KAAOG,EAAOH,MAAQ,EAC7BG,EAAOD,MAAQC,EAAOD,OAAS,GAC/BC,EAAOK,OAASL,EAAOK,QAAU,CAAC,MAClCL,EAAOM,IAAMN,EAAOM,KAAO,GAE3B,IAAMP,EACF,UAAYE,OAAOD,EAAOF,UAC1B,WAAaG,QAAQD,EAAOH,KAAO,GAAKG,EAAOF,UAC/C,MAAQI,mBAAmBD,OAAOD,EAAOD,QACzC,WAAaC,EAAOK,OAAOE,KAAK,KAChC,QAAUP,EAAOM,IAAIC,KAAK,KAE9B,OAAOJ,KAAKC,KAAKL,K,iCAGkBO,GACnC,OAAOH,KAAKK,MAAM,GAAI,CAACF,U,iCAGYA,GACnC,OAAOH,KAAKK,MAAM,UAAW,CAACF,U,sCAGkC,IAAtDT,EAAsD,uDAAjD,EAAGC,EAA8C,uDAArC,GAAIC,EAAiC,uDAA3B,GAAIU,EAAuB,uDAAF,GACxDT,EACF,UAAYC,OAAOH,GACnB,WAAaG,QAAQJ,EAAO,GAAKC,GADjC,qBAGQI,mBAAmBD,OAAOF,IAClC,eAAiBE,OAAOQ,GAE5B,OAAON,KAAKC,KAAKJ,O,GAlDU,QAsD7BU,EAAuB,IAAIf,EAIlB,U,2IC5EX,eAQa,GAPTgB,aAAa,QACbC,SAAS,WACRC,QAAS,EAAAH,qBACTI,eAAgB,EAAAA,eAChBT,OAAQ,EAAAA,OACRU,YAAY,EACZC,YAAY,G,0ECDF,iBAAgB,CAC3BC,WAAY,CACRC,WAAA,MAEJC,KAJ2B,WAKvB,MAAO,CACHT,qBAAA,OACAI,eAAgB,CACZT,OAAQ,CACJ,KACA,uBACA,wBAGRA,OAAQ,CACJ,CACIe,GAAI,KACJC,MAAO,QACPC,YAAa,MAEjB,CACIF,GAAI,uBACJC,MAAO,WAEX,CACID,GAAI,sBACJC,MAAO,YAEX,CACIE,aAAa,EACbD,YAAa,IACbE,UAAW,SAACC,GACR,OAAKA,EAAMC,sBAAyBD,EAAME,oBACtCF,EAAMC,sBAAwBD,EAAME,oBAA4BF,EAAMC,qBAAuB,IAAMD,EAAME,oBAEtGF,EAAMC,sBAAwBD,EAAME,oBAH2B,yBCpClG,EAAOC,OAASA,EAED","file":"js/chunk-ecacdfae.86b0bffb.js","sourcesContent":["import { AxiosResponse } from 'axios';\nimport { BaseService, PaginatedResponse } from './_base';\n\n\ninterface PhysicalToken {\n    id: string;\n}\n\ninterface PhysicalTokenListParams {\n    page?: number;\n    pagesize?: number;\n\n    query?: string;\n    ids?: Array<string>;\n\n    fields?: Array<string>;\n}\n\n\nclass PhysicalTokenService extends BaseService<PhysicalToken> {\n    constructor() {\n        super(\"/api/v2/devices/physical-tokens/\");\n        this.cacheTimeout = 60 * 60 * 24 * 14;\n    }\n\n    list(this: PhysicalTokenService, page=1, pagesize=1000, query=''): Promise<AxiosResponse<PaginatedResponse<PhysicalToken>>> {\n        const params =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n        return this._get(params) as unknown as Promise<AxiosResponse<PaginatedResponse<PhysicalToken>>>;\n    }\n\n    listParams(this: PhysicalTokenService, params: PhysicalTokenListParams): Promise<PaginatedResponse<PhysicalToken>> {\n        params = params || {};\n\n        params.pagesize = params.pagesize || 1000;\n        params.page = params.page || 1;\n        params.query = params.query || '';\n        params.fields = params.fields || ['id'];\n        params.ids = params.ids || [];\n\n        const query =\n            '?limit=' + String(params.pagesize) +\n            '&offset=' + String((params.page - 1) * params.pagesize) +\n            '&q=' + encodeURIComponent(String(params.query)) +\n            '&fields=' + params.fields.join(\"|\") +\n            '&ids=' + params.ids.join(\"|\");\n\n        return this._get(query) as unknown as Promise<PaginatedResponse<PhysicalToken>>;\n    }\n\n    listCreate(this: PhysicalTokenService, ids: Array<string>) {\n        return this._post('', {ids, });\n    }\n\n    listDelete(this: PhysicalTokenService, ids: Array<string>) {\n        return this._post('delete/', {ids, });\n    }\n\n    listAvailable(page=1, pagesize=50, query='', additionalCardNumber=''): Promise<PaginatedResponse<PhysicalToken>> {\n        const params =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&type=available' +\n            '&q=' + encodeURIComponent(String(query)) +\n            '&additional=' + String(additionalCardNumber);\n\n        return this._get(params) as unknown as Promise<PaginatedResponse<PhysicalToken>>;\n    }\n}\n\nconst physicalTokenService = new PhysicalTokenService();\n\nexport { physicalTokenService, PhysicalTokenService, PhysicalToken }\n\nexport default physicalTokenService;\n","<template>\n    <zeit-list\n        resourceType=\"Token\"\n        basePath=\"/tokens/\"\n        :service=\"physicalTokenService\"\n        :listParameters=\"listParameters\"\n        :fields=\"fields\"\n        :showDetail=\"false\"\n        :showSearch=\"false\"\n    ></zeit-list>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue';\n    import { star } from 'ionicons/icons';\n    import ZeitList from '../components/ui/ZeitList.vue';\n    import physicalTokenService from '../services/physical-tokens';\n    import { formatDuration } from '../globals/helpers';\n\n    export default defineComponent({\n        components: {\n            ZeitList,\n        },\n        data() {\n            return {\n                physicalTokenService,\n                listParameters: {\n                    fields: [\n                        'id',\n                        'employee__first_name',\n                        'employee__last_name',\n                    ],\n                },\n                fields: [\n                    {\n                        id: \"id\",\n                        label: \"Token\",\n                        mobileLevel: \"h2\",\n                    },\n                    {\n                        id: \"employee__first_name\",\n                        label: \"Vorname\",\n                    },\n                    {\n                        id: \"employee__last_name\",\n                        label: \"Nachname\",\n                    },\n                    {\n                        hideDesktop: true,\n                        mobileLevel: 'p',\n                        formatter: (token: any) => {\n                            if (!token.employee__first_name && !token.employee__last_name) return \"Keine Zuordnung\";\n                            if (token.employee__first_name && token.employee__last_name) return token.employee__first_name + \" \" + token.employee__last_name;\n\n                            return token.employee__first_name || token.employee__last_name;\n                        },\n                    },\n                ],\n            }\n        },\n    })\n</script>\n","\n    import { defineComponent } from 'vue';\n    import { star } from 'ionicons/icons';\n    import ZeitList from '../components/ui/ZeitList.vue';\n    import physicalTokenService from '../services/physical-tokens';\n    import { formatDuration } from '../globals/helpers';\n\n    export default defineComponent({\n        components: {\n            ZeitList,\n        },\n        data() {\n            return {\n                physicalTokenService,\n                listParameters: {\n                    fields: [\n                        'id',\n                        'employee__first_name',\n                        'employee__last_name',\n                    ],\n                },\n                fields: [\n                    {\n                        id: \"id\",\n                        label: \"Token\",\n                        mobileLevel: \"h2\",\n                    },\n                    {\n                        id: \"employee__first_name\",\n                        label: \"Vorname\",\n                    },\n                    {\n                        id: \"employee__last_name\",\n                        label: \"Nachname\",\n                    },\n                    {\n                        hideDesktop: true,\n                        mobileLevel: 'p',\n                        formatter: (token: any) => {\n                            if (!token.employee__first_name && !token.employee__last_name) return \"Keine Zuordnung\";\n                            if (token.employee__first_name && token.employee__last_name) return token.employee__first_name + \" \" + token.employee__last_name;\n\n                            return token.employee__first_name || token.employee__last_name;\n                        },\n                    },\n                ],\n            }\n        },\n    })\n","import { render } from \"./Tokens.vue?vue&type=template&id=3e6c92d2\"\nimport script from \"./Tokens.vue?vue&type=script&lang=ts\"\nexport * from \"./Tokens.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}