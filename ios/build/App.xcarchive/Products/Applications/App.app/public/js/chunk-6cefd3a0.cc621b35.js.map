{"version":3,"sources":["webpack:///./src/services/employee-groups.ts","webpack:///./src/views/Departments.vue","webpack:///./src/views/Departments.vue?a694","webpack:///./src/views/Departments.vue?1d48"],"names":["EmployeeGroupService","formFields","autofocus","mobileType","cacheTimeout","resourceId","Promise","resolve","params","pagesize","page","query","url","String","encodeURIComponent","ids","join","this","_get","employeeGroupService","resourceType","basePath","searchPlaceholder","service","fields","no-results","no-results-add","components","ZeitList","data","id","label","mobileLevel","hideDesktop","formatter","group","employee_count","render"],"mappings":"wOAkBMA,E,wDACF,iDACI,cAAM,6BACN,EAAKC,WAAa,CACd,IAAI,OAAU,OAAQ,iBAAkB,CAAEC,WAAW,EAAMC,WAAY,aAG3E,EAAKC,aAAe,QANxB,E,gEASiBC,GAAwC,OAAOC,QAAQC,QAAQ,0B,8CACxDF,GAAwC,OAAOC,QAAQC,QAAQ,2B,2CAClEF,GAAwC,OAAOC,QAAQC,QAAQ,Y,0CAChEF,GAAwC,OAAOC,QAAQC,QAAQ,e,iDACxDF,GAAwC,OAAOC,QAAQC,QAAQ,wB,iCAE/EC,GACP,IAAMC,EAAWD,EAAOC,UAAY,GAC9BC,EAAOF,EAAOE,MAAQ,EACtBC,EAAQH,EAAOG,OAAS,GAE1BC,EACA,UAAYC,OAAOJ,GACnB,WAAaI,QAAQH,EAAO,GAAKD,GACjC,MAAQK,mBAAmBD,OAAOF,IAItC,OAFQH,EAAOO,MAAKH,GAAO,QAAUJ,EAAOO,IAAIC,KAAK,MAE9CC,KAAKC,KAAKN,O,GA5BU,QAgC7BO,EAAuB,IAAInB,G,4EC1CG,4C,iBACI,wF,kFARpC,eASY,GARRoB,aAAa,cACbC,SAAS,gBACTC,kBAAkB,4BACjBC,QAAS,EAAAJ,qBACTK,OAAQ,EAAAA,Q,CAEQC,aAAU,gBAAC,iBAAwC,C,MACnDC,iBAAc,gBAAC,iBAAoF,C,+DCFzG,iBAAgB,CAC3BC,WAAY,CACRC,WAAA,MAEJC,KAJ2B,WAKvB,MAAO,CACHV,qBAAA,OACAK,OAAQ,CAMJ,CACIM,GAAI,OACJC,MAAO,OACPC,YAAa,MAEjB,CACIF,GAAI,iBACJC,MAAO,2BAEX,CACIC,YAAa,IACbC,aAAa,EACbC,UAAW,SAACC,GAAD,OAA0BA,EAAMC,eAAiB,sBC7BpF,EAAOC,OAASA,EAED","file":"js/chunk-6cefd3a0.cc621b35.js","sourcesContent":["import {BaseService, FormField} from './_base';\n\n\ninterface EmployeeGroup {\n    id: string;\n    name: string;\n    employee_count: number;\n}\n\n\ninterface EmployeeGroupListParams {\n    page?: number;\n    pagesize?: number;\n    query?: string;\n    ids?: Array<string>;\n}\n\n\nclass EmployeeGroupService extends BaseService<EmployeeGroup> {\n    constructor() {\n        super(\"/api/v2/employees/groups/\");\n        this.formFields = [\n            new FormField(\"name\", \"Abteilungsname\", { autofocus: true, mobileType: 'stacked'}),\n        ];\n\n        this.cacheTimeout = 60 * 60 * 24 * 14;\n    }\n\n    newResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Abteilung hinzufügen\") }\n    newResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Abteilung hinzugefügt\") }\n    deleteResourceMethod(resourceId?: string): Promise<string> { return Promise.resolve(\"delete\") }\n    deleteResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Entfernen\") }\n    deleteResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Abteilung entfernt\") }\n\n    listParams(params: EmployeeGroupListParams) {\n        const pagesize = params.pagesize || 50;\n        const page = params.page || 1;\n        const query = params.query || '';\n\n        let url =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n            if (params.ids) url += \"&ids=\" + params.ids.join(\"|\");\n\n        return this._get(url);\n    }\n}\n\nconst employeeGroupService = new EmployeeGroupService();\n\nexport { EmployeeGroup, EmployeeGroupService, employeeGroupService }\n\nexport default employeeGroupService;\n","<template>\n    <zeit-list\n        resourceType=\"Abteilungen\"\n        basePath=\"/departments/\"\n        searchPlaceholder=\"Suche nach Abteilungsname\"\n        :service=\"employeeGroupService\"\n        :fields=\"fields\"\n    >\n        <template v-slot:no-results>Es existieren aktuell keine Abteilungen.</template>\n        <template v-slot:no-results-add>Erstelle Abteilungen, um deine Mitarbeiter zu gruppieren und einfacher zu verwalten.</template>\n    </zeit-list>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue';\n    import { star } from 'ionicons/icons';\n    import ZeitList from '../components/ui/ZeitList.vue';\n    import { employeeGroupService, EmployeeGroup } from '../services/employee-groups';\n    import { formatDuration } from '../globals/helpers';\n\n    export default defineComponent({\n        components: {\n            ZeitList,\n        },\n        data() {\n            return {\n                employeeGroupService,\n                fields: [\n                    // {\n                    //     id: \"id\",\n                    //     label: \"Seriennummer\",\n                    //     mobileLevel: \"p\",\n                    // },\n                    {\n                        id: \"name\",\n                        label: \"Name\",\n                        mobileLevel: \"h2\",\n                    },\n                    {\n                        id: \"employee_count\",\n                        label: \"Zugeordnete Mitarbeiter\",\n                    },\n                    {\n                        mobileLevel: \"p\",\n                        hideDesktop: true,\n                        formatter: (group: EmployeeGroup) => group.employee_count + \" Mitarbeiter\",\n                    },\n                ],\n            }\n        },\n    })\n</script>\n\n\n","\n    import { defineComponent } from 'vue';\n    import { star } from 'ionicons/icons';\n    import ZeitList from '../components/ui/ZeitList.vue';\n    import { employeeGroupService, EmployeeGroup } from '../services/employee-groups';\n    import { formatDuration } from '../globals/helpers';\n\n    export default defineComponent({\n        components: {\n            ZeitList,\n        },\n        data() {\n            return {\n                employeeGroupService,\n                fields: [\n                    // {\n                    //     id: \"id\",\n                    //     label: \"Seriennummer\",\n                    //     mobileLevel: \"p\",\n                    // },\n                    {\n                        id: \"name\",\n                        label: \"Name\",\n                        mobileLevel: \"h2\",\n                    },\n                    {\n                        id: \"employee_count\",\n                        label: \"Zugeordnete Mitarbeiter\",\n                    },\n                    {\n                        mobileLevel: \"p\",\n                        hideDesktop: true,\n                        formatter: (group: EmployeeGroup) => group.employee_count + \" Mitarbeiter\",\n                    },\n                ],\n            }\n        },\n    })\n","import { render } from \"./Departments.vue?vue&type=template&id=fbc18f36\"\nimport script from \"./Departments.vue?vue&type=script&lang=ts\"\nexport * from \"./Departments.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}