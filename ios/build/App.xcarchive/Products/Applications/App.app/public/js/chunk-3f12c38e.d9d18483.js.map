{"version":3,"sources":["webpack:///./src/services/devices.ts","webpack:///./src/views/Devices.vue","webpack:///./src/views/Devices.vue?c6d3","webpack:///./src/views/Devices.vue?296f"],"names":["DeviceService","formFields","autofocus","showEdit","mobileType","isReadOnly","showCreate","default","type","remoteSourceService","remoteSourceAttribute","remoteSourceListMethod","isSelectedValueInOptionList","allowNull","conditions","cacheTimeout","resourceId","Promise","resolve","resource","human_readable_name","serial_number","page","pagesize","query","this","_getChoices","params","url","String","encodeURIComponent","_get","deviceService","resourceType","basePath","searchPlaceholder","service","fields","no-results","no-results-add","components","ZeitList","data","id","label","mobileLevel","render"],"mappings":"0OAmCMA,E,wDACF,iDACI,cAAM,4BACN,EAAKC,WAAa,CACd,IAAI,OAAU,gBAAiB,eAAgB,CAAEC,WAAW,EAAMC,UAAU,IAC5E,IAAI,OAAU,sBAAuB,cAAe,CAAEC,WAAY,UAAWD,UAAU,IAEvF,IAAI,OAAU,gBAAiB,eAAgB,CAAEE,YAAY,EAAMC,YAAY,IAC/E,IAAI,OAAU,QAAS,WAAY,CAAED,YAAY,EAAMC,YAAY,EAAOC,QAAS,kBACnF,IAAI,OAAU,sBAAuB,cAAe,CAAEH,WAAY,UAAWF,WAAW,EAAMI,YAAY,IAE1G,IAAI,OAAU,sBAAuB,oBAAqB,CACtDE,KAAM,SACNC,oBAAqB,kBACrBC,sBAAuB,QACvBC,uBAAwB,0BACxBC,6BAA6B,EAC7BC,WAAW,EACXP,YAAY,EACZQ,WAAY,CACR,IAAI,OAAmB,QAAS,YAK5C,EAAKC,aAAe,IAxBxB,E,8DA2BeC,GACX,OAAOC,QAAQC,SAAQ,SAACC,GACpB,OAAIA,EAASC,oBAA4BD,EAASC,oBAC3CD,EAASE,mB,uCAGPL,GAAwC,OAAOC,QAAQC,QAAQ,yB,8CACxDF,GAAwC,OAAOC,QAAQC,QAAQ,0B,2CAClEF,GAAwC,OAAOC,QAAQC,QAAQ,Y,0CAChEF,GAAwC,OAAOC,QAAQC,QAAQ,e,iDACxDF,GAAwC,OAAOC,QAAQC,QAAQ,uB,gDAErC,IAA7BI,EAA6B,uDAAxB,EAAGC,EAAqB,uDAAZ,GAAIC,EAAQ,uDAAF,GAC/C,OAAOC,KAAKC,YAAY,wBAAyBJ,EAAMC,EAAUC,K,iCAG1DG,GACP,IAAMJ,EAAWI,EAAOJ,UAAY,GAC9BD,EAAOK,EAAOL,MAAQ,EACtBE,EAAQG,EAAOH,OAAS,GAExBI,EACF,UAAYC,OAAON,GACnB,WAAaM,QAAQP,EAAO,GAAKC,GACjC,MAAQO,mBAAmBD,OAAOL,IAEtC,OAAOC,KAAKM,KAAKH,O,GAtDG,QA0DtBI,EAAgB,IAAIhC,EAIX,U,0ECzFqB,6E,iBACI,kH,kFARpC,eASY,GARRiC,aAAa,WACbC,SAAS,YACTC,kBAAkB,0BACjBC,QAAS,EAAAJ,cACTK,OAAQ,EAAAA,Q,CAEQC,aAAU,gBAAC,iBAAyE,C,MACpFC,iBAAc,gBAAC,iBAA8G,C,+DCHnI,iBAAgB,CAC3BC,WAAY,CACRC,WAAA,MAEJC,KAJ2B,WAKvB,MAAO,CACHV,cAAA,OACAK,OAAQ,CACJ,CACIM,GAAI,gBACJC,MAAO,eACPC,YAAa,KAEjB,CACIF,GAAI,sBACJC,MAAO,cACPrC,QAAS,oBACTsC,YAAa,MAEjB,CACIF,GAAI,QACJC,MAAO,WACPrC,QAAS,gBACTsC,YAAa,UC1BrC,EAAOC,OAASA,EAED","file":"js/chunk-3f12c38e.d9d18483.js","sourcesContent":["import { AxiosResponse } from 'axios';\nimport { BaseService, FormField, FormFieldCondition, ChoiceField, PaginatedResponse } from './_base';\n\n\ninterface NetworkConnectionDetail {\n    is_connected: boolean;\n    ip?: string;\n}\n\n\ninterface NetworkConnections {\n    wifi: NetworkConnectionDetail;\n    eth: NetworkConnectionDetail;\n}\n\n\ninterface Device {\n    id: string;\n    created_at: string;\n    modified_at: string;\n    model?: string;\n    serial_number: string;\n    human_readable_name: string;\n    authentication_mode: string;\n    is_online: boolean;\n    network_connections: NetworkConnections;\n}\n\ninterface DeviceListParams {\n    page?: number;\n    pagesize?: number;\n    query?: string;\n}\n\n\nclass DeviceService extends BaseService<Device> {\n    constructor() {\n        super(\"/api/v2/devices/devices/\");\n        this.formFields = [\n            new FormField(\"serial_number\", \"Seriennummer\", { autofocus: true, showEdit: false }),\n            new FormField(\"human_readable_name\", \"Bezeichnung\", { mobileType: 'stacked', showEdit: false }),\n\n            new FormField(\"serial_number\", \"Seriennummer\", { isReadOnly: true, showCreate: false }),\n            new FormField(\"model\", \"Baureihe\", { isReadOnly: true, showCreate: false, default: \"Token-Scanner\" }),\n            new FormField(\"human_readable_name\", \"Bezeichnung\", { mobileType: 'stacked', autofocus: true, showCreate: false }),\n\n            new FormField(\"authentication_mode\", \"Authentifizierung\", {\n                type: \"select\",\n                remoteSourceService: this,\n                remoteSourceAttribute: 'label',\n                remoteSourceListMethod: \"listAuthenticationModes\",\n                isSelectedValueInOptionList: true,\n                allowNull: false,\n                showCreate: false,\n                conditions: [\n                    new FormFieldCondition(\"model\", \"MFP*\"),\n                ],\n            }),\n        ];\n\n        this.cacheTimeout = 60 * 15;\n    }\n\n    titleAttribute(resourceId?: string): Promise<any> {\n        return Promise.resolve((resource: any) => {\n            if (resource.human_readable_name) return resource.human_readable_name;\n            return resource.serial_number;\n        });\n    }\n    newResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Terminal hinzufügen\") }\n    newResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Terminal hinzugefügt\") }\n    deleteResourceMethod(resourceId?: string): Promise<string> { return Promise.resolve(\"delete\") }\n    deleteResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Entfernen\") }\n    deleteResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Terminal entfernt\") }\n\n    listAuthenticationModes(page=1, pagesize=50, query=''): Promise<AxiosResponse<PaginatedResponse<ChoiceField>>> {\n        return this._getChoices('authentication-modes/', page, pagesize, query);\n    }\n\n    listParams(params: DeviceListParams) {\n        const pagesize = params.pagesize || 50;\n        const page = params.page || 1;\n        const query = params.query || '';\n\n        const url =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n        return this._get(url);\n    }\n}\n\nconst deviceService = new DeviceService();\n\nexport {deviceService, DeviceService, Device, NetworkConnectionDetail, NetworkConnections}\n\nexport default deviceService;\n","<template>\n    <zeit-list\n        resourceType=\"Hardware\"\n        basePath=\"/devices/\"\n        searchPlaceholder=\"Suche nach Seriennummer\"\n        :service=\"deviceService\"\n        :fields=\"fields\"\n    >\n        <template v-slot:no-results>Es existiert aktuell keine Zeiterfassungs-Hardware in deinem Unternehmen.</template>\n        <template v-slot:no-results-add>Füge Hardware hinzu, um deinen Mitarbeitern die Arbeitszeiterfassung über dedizierte Terminals zu ermöglichen.</template>\n    </zeit-list>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue';\n    import ZeitList from '../components/ui/ZeitList.vue';\n\n    import deviceService from '../services/devices';\n\n    export default defineComponent({\n        components: {\n            ZeitList,\n        },\n        data() {\n            return {\n                deviceService,\n                fields: [\n                    {\n                        id: \"serial_number\",\n                        label: \"Seriennummer\",\n                        mobileLevel: \"p\",\n                    },\n                    {\n                        id: \"human_readable_name\",\n                        label: \"Bezeichnung\",\n                        default: \"Keine Bezeichnung\",\n                        mobileLevel: \"h2\",\n                    },\n                    {\n                        id: \"model\",\n                        label: \"Baureihe\",\n                        default: \"Token-Scanner\",\n                        mobileLevel: \"p\",\n                    },\n                ],\n            }\n        },\n    })\n</script>\n","\n    import { defineComponent } from 'vue';\n    import ZeitList from '../components/ui/ZeitList.vue';\n\n    import deviceService from '../services/devices';\n\n    export default defineComponent({\n        components: {\n            ZeitList,\n        },\n        data() {\n            return {\n                deviceService,\n                fields: [\n                    {\n                        id: \"serial_number\",\n                        label: \"Seriennummer\",\n                        mobileLevel: \"p\",\n                    },\n                    {\n                        id: \"human_readable_name\",\n                        label: \"Bezeichnung\",\n                        default: \"Keine Bezeichnung\",\n                        mobileLevel: \"h2\",\n                    },\n                    {\n                        id: \"model\",\n                        label: \"Baureihe\",\n                        default: \"Token-Scanner\",\n                        mobileLevel: \"p\",\n                    },\n                ],\n            }\n        },\n    })\n","import { render } from \"./Devices.vue?vue&type=template&id=76d1598e\"\nimport script from \"./Devices.vue?vue&type=script&lang=ts\"\nexport * from \"./Devices.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}