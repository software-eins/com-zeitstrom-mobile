{"version":3,"sources":["webpack:///./src/components/helpers/ZeitPromiseSolver.vue?8db3","webpack:///./src/components/ui/ZeitProjectBadge.vue?95b2","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/components/ui/ZeitWorkdayCard.vue","webpack:///./src/components/ui/ZeitProjectBadge.vue","webpack:///./src/components/ui/ZeitProjectBadge.vue?9e7f","webpack:///./src/components/ui/ZeitProjectBadge.vue?b05c","webpack:///./src/components/ui/ZeitWorkdayCard.vue?f659","webpack:///./src/components/ui/ZeitWorkdayCard.vue?c93f","webpack:///./node_modules/core-js/modules/es.array.some.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./src/services/employee-groups.ts","webpack:///./src/services/timespans.ts","webpack:///./src/components/helpers/ZeitPromiseSolver.vue","webpack:///./src/components/helpers/ZeitPromiseSolver.vue?248f","webpack:///./src/components/helpers/ZeitPromiseSolver.vue?d90d","webpack:///./src/services/physical-tokens.ts","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./src/services/employees.ts","webpack:///./src/services/reports-employees.ts","webpack:///./src/services/projects.ts","webpack:///./src/globals/colors.ts"],"names":["_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","i","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","class","lines","formatDatetime","workday","checkin","formatLongDate","hasOpenTimespans","promise","formatDuration","workDuration","automaticRestDuration","timespans","timespan","idx","key","id","button","detail","isLoadingTimespan","showTimespanDetails","formatTime","time","checkout","projectId","project_id","employee_comment","slot","formatDifference","project","style","getStyle","code","postfix","getPostfixStyle","props","String","maxWidth","type","Number","default","data","projectService","textByBackground","watch","this","loadProject","methods","color","retrieve","then","response","mounted","colors","text","render","__scopeId","components","IonCard","IonLabel","IonList","IonItem","IonNote","IonSpinner","ZeitPromiseSolver","ZeitProjectBadge","activeTimespanId","timespanService","total","diff","physicalRestDuration","breakTime","hasShortBreakPolicy","short_break_policy","entries","delta","computedRestDuration","break_duration","Map","path","$router","some","$","$some","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","module","exports","requireObjectCoercible","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","replace","start","end","trim","EmployeeGroupService","formFields","autofocus","mobileType","cacheTimeout","resourceId","Promise","resolve","params","pagesize","page","query","url","encodeURIComponent","ids","join","_get","employeeGroupService","TimespanService","employeeIds","workmonthIds","workdayIds","verbosity","isoDateFrom","isoDateTo","order","body","_patch","_post","employeeComment","payload","timespanGroup","newTimespans","ts","originalTimespanIds","result","map","isSolved","getPlaceholderStyle","animated","IonSkeletonText","width","display","PhysicalTokenService","fields","additionalCardNumber","physicalTokenService","DESCRIPTORS","global","isForced","redefine","has","classof","inheritIfRequired","toPrimitive","fails","create","getOwnPropertyNames","f","getOwnPropertyDescriptor","defineProperty","NUMBER","NativeNumber","NumberPrototype","prototype","BROKEN_CLASSOF","toNumber","argument","first","third","radix","maxCode","digits","index","it","charCodeAt","NaN","slice","parseInt","NumberWrapper","dummy","valueOf","call","keys","split","j","constructor","EmployeeService","remoteSourceService","remoteSourceAttribute","description","remoteSourceListMethod","listPageSize","concat","name","isReadOnly","showCreate","archivedFormFields","filterAttributes","visible","listParams","showArchived","count","multiple","resource","first_name","last_name","employeeResponse","can_be_deleted","archived_at","categoryId","settingId","retrieveSettings","employeeSettings","retrieveSettingValue","newSettings","employeeGroups","minimumAbsenceCount","absenceDaterange","useCache","employeeService","EmployeeReportService","employeeId","daterange","employeeReportService","ProjectService","includeArchived","highlighted","clearCache"],"mappings":"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","file":"js/chunk-3022d390.dbfa8cbc.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ZeitPromiseSolver.vue?vue&type=style&index=0&id=edc77cd2&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ZeitProjectBadge.vue?vue&type=style&index=0&id=10b4177d&scoped=true&lang=css\"","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","<template>\n  <ion-card class=\"mt-0\">\n    <ion-list class=\"transparent-bg\">\n      <ion-item class=\"flex items-center justify-center w-full transparent-bg\" lines=\"full\">\n        <ion-label class=\"flex-grow\">\n          <h3>{{ formatDatetime(workday.checkin, 'dddd') }}</h3>\n          <p>{{ formatLongDate(workday.checkin) }}</p>\n        </ion-label>\n        <ion-label\n          class=\"text-right\"\n          v-if=\"!hasOpenTimespans()\"\n        >\n          <h3><zeit-promise-solver :promise=\"formatDuration(workDuration() - automaticRestDuration())\" /> h</h3>\n          <p v-if=\"automaticRestDuration() > 0\">\n            - <zeit-promise-solver :promise=\"formatDuration(automaticRestDuration())\" /> h\n          </p>\n        </ion-label>\n      </ion-item>\n      <ion-item\n        v-for=\"(timespan, idx) of workday.timespans\"\n        :key=\"timespan.id\"\n        class=\"transparent-bg\"\n        button\n        :lines=\"idx == workday.timespans.length - 1 ? 'none' : 'none'\"\n        :detail=\"isLoadingTimespan != timespan.id\"\n        @click=\"showTimespanDetails(timespan)\"\n      >\n        <ion-label>\n          <h3>\n            {{ formatTime(timespan.checkin.time) }} –\n            <span v-if=\"timespan.checkout\">{{ formatTime(timespan.checkout.time) }}</span>\n            <span v-else>??</span>\n            <zeit-project-badge :projectId=\"timespan.project_id\" class=\"ml-2\" />\n          </h3>\n          <p v-if=\"timespan.employee_comment\">{{ timespan.employee_comment }}</p>\n        </ion-label>\n        <ion-note\n          slot=\"end\"\n          class=\"text-sm\"\n          v-if=\"timespan.checkout && isLoadingTimespan != timespan.id\"\n        ><zeit-promise-solver\n          :promise=\"formatDifference(timespan.checkin.time, timespan.checkout.time, 'seconds')\"\n        /></ion-note>\n        <ion-spinner slot=\"end\" v-if=\"isLoadingTimespan == timespan.id\" />\n      </ion-item>\n    </ion-list>\n  </ion-card>\n</template>\n\n<script lang=\"ts\">\n  import { defineComponent } from 'vue';\n\n  import {\n    IonCard, IonLabel, IonList, IonItem, IonNote, IonSpinner,\n  } from '@ionic/vue';\n\n  import ZeitPromiseSolver from '../helpers/ZeitPromiseSolver.vue';\n  import { formatTime, formatDifference, formatLongDate, formatDatetime, formatDuration } from '../../globals/helpers';\n\n  import moment from 'moment';\n  import { Timespan, timespanService } from '../../services/timespans';\n  import ZeitProjectBadge from './ZeitProjectBadge.vue';\n\n\n  export default defineComponent({\n    components: {\n      IonCard, IonLabel, IonList, IonItem, IonNote, IonSpinner,\n      ZeitPromiseSolver,\n        ZeitProjectBadge\n    },\n    props: {\n      workday: Object,\n      activeTimespanId: String,\n    },\n    data() {\n      return {\n        timespanService,\n\n        isLoadingTimespan: undefined as string|undefined,\n\n        formatTime,\n        formatDifference,\n        formatLongDate,\n        formatDatetime,\n        formatDuration,\n      }\n    },\n    methods: {\n      workDuration() {\n        let total = 0;\n\n        for (const timespan of this.workday!.timespans) {\n          if (!timespan.checkout) continue;\n          total += moment(timespan.checkout.time).diff(moment(timespan.checkin.time)) / 1000;\n        }\n\n        return total;\n      },\n      physicalRestDuration() {\n        // Return tracked work interruptions, if they (depending on the setting)\n        // are at least 15min\n\n        if (!this.workday) return 0;\n        let breakTime = 0;\n        const hasShortBreakPolicy = (this.workday.short_break_policy == \"enabled_15min\");\n\n        for (const [idx, timespan] of this.workday.timespans.entries()) {\n          // Skip the last timespan, no following break\n          if (idx == this.workday.timespans.length - 1) continue;\n\n          // Skip timespans without checkout, unfinished timespan\n          if (this.workday.timespans[idx + 1].checkout == null) continue;\n\n          const delta = (moment(timespan.checkin.time).diff(moment(this.workday.timespans[idx + 1].checkout.time))) / 1000;\n          if (delta >= 60 * 15 || !hasShortBreakPolicy) {\n            breakTime += delta;\n          }\n        }\n\n        return breakTime;\n      },\n      computedRestDuration() {\n        if (!this.workday) return 0;\n\n        // Return rest duration which includes automatic breaks\n        let breakTime = this.workday.break_duration;\n        const hasShortBreakPolicy = (this.workday.short_break_policy == \"enabled_15min\");\n\n        // Substract short interruptions which are not breaks\n        for (const [idx, timespan] of this.workday.timespans.entries()) {\n          // Skip the last timespan, no following break\n          if (idx == this.workday.timespans.length - 1) continue;\n\n          // Skip timespans without checkout, unfinished timespan\n          if (this.workday.timespans[idx + 1].checkout == null) continue;\n\n          const delta = (moment(timespan.checkin.time).diff(moment(this.workday.timespans[idx + 1].checkout.time))) / 1000;\n          if (delta < 60 * 15 && hasShortBreakPolicy) {\n            breakTime -= delta;\n          }\n        }\n\n        return breakTime;\n      },\n      showTimespanDetails(timespan: Timespan) {\n        this.isLoadingTimespan = timespan.id;\n        this.timespanService.retrieve(timespan.id, new Map([['verbosity', 'detail']])).then(() => {\n          const path = '/timespans/' + timespan.id + '/';\n          this.$router.push({path}).then(() => {\n            this.isLoadingTimespan = undefined;\n          });\n        })\n      },\n      automaticRestDuration() {\n        // Return the rest duration which was substracted automatically by the\n        // server\n        return this.computedRestDuration() - this.physicalRestDuration();\n      },\n      hasOpenTimespans() {\n        return this.workday!.timespans.some((timespan: Timespan) => !timespan.checkout);\n      }\n    },\n  });\n</script>\n","<template>\n    <div\n        v-if=\"project\"\n        class=\"inline-block cursor-default\"\n    >\n        <div\n            :style=\"getStyle()\"\n            class=\"inline-block project-badge px-2 py-1\"\n        >\n            <div class=\"flex\">\n                <div class=\"text flex-initial\">\n                    {{ project.code }}\n                </div>\n                <div\n                    v-if=\"postfix\"\n                    class=\"flex-initial postfix y-align-2 py-2 ml-3 pl-3\"\n                    :style=\"getPostfixStyle()\"\n                >\n                    {{ postfix }}\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style scoped>\n    .project-badge {\n        border-radius: 3px;\n        font-size: 80%;\n        line-height: 1;\n    }\n    .project-badge div.text {\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .project-badge .postfix {\n        border-left: 1px solid;\n    }\n</style>\n\n<script lang=\"ts\">\n    import { colors } from '../../globals/colors';\n    import { defineComponent } from 'vue';\n\n    import { Project, projectService } from '../../services/projects';\n    import { AxiosResponse } from 'axios';\n\n    export default defineComponent({\n        props: {\n            projectId: String,\n            maxWidth: {\n                type: Number,\n                default: 200,\n            },\n            postfix: {\n                type: String,\n                default: undefined,\n            },\n        },\n        data() {\n            return {\n                projectService,\n\n                project: undefined as Project|undefined,\n                textByBackground: {},\n            }\n        },\n        watch: {\n            projectId() {\n                this.loadProject();\n            },\n        },\n        methods: {\n            getStyle(this: any) {\n                return {\n                    'background-color': '#' + this.project.color,\n                    'color': '#' + (this.textByBackground[this.project.color] || 'ffffff'),\n                    'max-width': String(this.maxWidth) + \"px\",\n                };\n            },\n            getPostfixStyle(this: any) {\n                return {\n                    'color': '#' + (this.textByBackground[this.project.color] || 'ffffff') + 'aa',\n                    'border-color': '#' + (this.textByBackground[this.project.color] || 'ffffff') + '22',\n                    'max-width': String(this.maxWidth) + \"px\",\n                };\n            },\n            loadProject() {\n                if (!this.projectId) {\n                    this.project = undefined;\n                    return\n                }\n\n                return this.projectService.retrieve(this.projectId).then((response: AxiosResponse<Project>) => {\n                    this.project = response.data;\n                });\n            }\n        },\n        mounted(this: any) {\n            for (const color of colors) {\n                this.textByBackground[color.code] = color.text;\n            }\n\n            this.loadProject();\n        }\n    })\n</script>\n","\n    import { colors } from '../../globals/colors';\n    import { defineComponent } from 'vue';\n\n    import { Project, projectService } from '../../services/projects';\n    import { AxiosResponse } from 'axios';\n\n    export default defineComponent({\n        props: {\n            projectId: String,\n            maxWidth: {\n                type: Number,\n                default: 200,\n            },\n            postfix: {\n                type: String,\n                default: undefined,\n            },\n        },\n        data() {\n            return {\n                projectService,\n\n                project: undefined as Project|undefined,\n                textByBackground: {},\n            }\n        },\n        watch: {\n            projectId() {\n                this.loadProject();\n            },\n        },\n        methods: {\n            getStyle(this: any) {\n                return {\n                    'background-color': '#' + this.project.color,\n                    'color': '#' + (this.textByBackground[this.project.color] || 'ffffff'),\n                    'max-width': String(this.maxWidth) + \"px\",\n                };\n            },\n            getPostfixStyle(this: any) {\n                return {\n                    'color': '#' + (this.textByBackground[this.project.color] || 'ffffff') + 'aa',\n                    'border-color': '#' + (this.textByBackground[this.project.color] || 'ffffff') + '22',\n                    'max-width': String(this.maxWidth) + \"px\",\n                };\n            },\n            loadProject() {\n                if (!this.projectId) {\n                    this.project = undefined;\n                    return\n                }\n\n                return this.projectService.retrieve(this.projectId).then((response: AxiosResponse<Project>) => {\n                    this.project = response.data;\n                });\n            }\n        },\n        mounted(this: any) {\n            for (const color of colors) {\n                this.textByBackground[color.code] = color.text;\n            }\n\n            this.loadProject();\n        }\n    })\n","import { render } from \"./ZeitProjectBadge.vue?vue&type=template&id=10b4177d&scoped=true\"\nimport script from \"./ZeitProjectBadge.vue?vue&type=script&lang=ts\"\nexport * from \"./ZeitProjectBadge.vue?vue&type=script&lang=ts\"\n\nimport \"./ZeitProjectBadge.vue?vue&type=style&index=0&id=10b4177d&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-10b4177d\"\n\nexport default script","\n  import { defineComponent } from 'vue';\n\n  import {\n    IonCard, IonLabel, IonList, IonItem, IonNote, IonSpinner,\n  } from '@ionic/vue';\n\n  import ZeitPromiseSolver from '../helpers/ZeitPromiseSolver.vue';\n  import { formatTime, formatDifference, formatLongDate, formatDatetime, formatDuration } from '../../globals/helpers';\n\n  import moment from 'moment';\n  import { Timespan, timespanService } from '../../services/timespans';\n  import ZeitProjectBadge from './ZeitProjectBadge.vue';\n\n\n  export default defineComponent({\n    components: {\n      IonCard, IonLabel, IonList, IonItem, IonNote, IonSpinner,\n      ZeitPromiseSolver,\n        ZeitProjectBadge\n    },\n    props: {\n      workday: Object,\n      activeTimespanId: String,\n    },\n    data() {\n      return {\n        timespanService,\n\n        isLoadingTimespan: undefined as string|undefined,\n\n        formatTime,\n        formatDifference,\n        formatLongDate,\n        formatDatetime,\n        formatDuration,\n      }\n    },\n    methods: {\n      workDuration() {\n        let total = 0;\n\n        for (const timespan of this.workday!.timespans) {\n          if (!timespan.checkout) continue;\n          total += moment(timespan.checkout.time).diff(moment(timespan.checkin.time)) / 1000;\n        }\n\n        return total;\n      },\n      physicalRestDuration() {\n        // Return tracked work interruptions, if they (depending on the setting)\n        // are at least 15min\n\n        if (!this.workday) return 0;\n        let breakTime = 0;\n        const hasShortBreakPolicy = (this.workday.short_break_policy == \"enabled_15min\");\n\n        for (const [idx, timespan] of this.workday.timespans.entries()) {\n          // Skip the last timespan, no following break\n          if (idx == this.workday.timespans.length - 1) continue;\n\n          // Skip timespans without checkout, unfinished timespan\n          if (this.workday.timespans[idx + 1].checkout == null) continue;\n\n          const delta = (moment(timespan.checkin.time).diff(moment(this.workday.timespans[idx + 1].checkout.time))) / 1000;\n          if (delta >= 60 * 15 || !hasShortBreakPolicy) {\n            breakTime += delta;\n          }\n        }\n\n        return breakTime;\n      },\n      computedRestDuration() {\n        if (!this.workday) return 0;\n\n        // Return rest duration which includes automatic breaks\n        let breakTime = this.workday.break_duration;\n        const hasShortBreakPolicy = (this.workday.short_break_policy == \"enabled_15min\");\n\n        // Substract short interruptions which are not breaks\n        for (const [idx, timespan] of this.workday.timespans.entries()) {\n          // Skip the last timespan, no following break\n          if (idx == this.workday.timespans.length - 1) continue;\n\n          // Skip timespans without checkout, unfinished timespan\n          if (this.workday.timespans[idx + 1].checkout == null) continue;\n\n          const delta = (moment(timespan.checkin.time).diff(moment(this.workday.timespans[idx + 1].checkout.time))) / 1000;\n          if (delta < 60 * 15 && hasShortBreakPolicy) {\n            breakTime -= delta;\n          }\n        }\n\n        return breakTime;\n      },\n      showTimespanDetails(timespan: Timespan) {\n        this.isLoadingTimespan = timespan.id;\n        this.timespanService.retrieve(timespan.id, new Map([['verbosity', 'detail']])).then(() => {\n          const path = '/timespans/' + timespan.id + '/';\n          this.$router.push({path}).then(() => {\n            this.isLoadingTimespan = undefined;\n          });\n        })\n      },\n      automaticRestDuration() {\n        // Return the rest duration which was substracted automatically by the\n        // server\n        return this.computedRestDuration() - this.physicalRestDuration();\n      },\n      hasOpenTimespans() {\n        return this.workday!.timespans.some((timespan: Timespan) => !timespan.checkout);\n      }\n    },\n  });\n","import { render } from \"./ZeitWorkdayCard.vue?vue&type=template&id=22f18912\"\nimport script from \"./ZeitWorkdayCard.vue?vue&type=script&lang=ts\"\nexport * from \"./ZeitWorkdayCard.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar $some = require('../internals/array-iteration').some;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('some');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('some');\n\n// `Array.prototype.some` method\n// https://tc39.es/ecma262/#sec-array.prototype.some\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","import {BaseService, FormField} from './_base';\n\n\ninterface EmployeeGroup {\n    id: string;\n    name: string;\n    employee_count: number;\n}\n\n\ninterface EmployeeGroupListParams {\n    page?: number;\n    pagesize?: number;\n    query?: string;\n    ids?: Array<string>;\n}\n\n\nclass EmployeeGroupService extends BaseService<EmployeeGroup> {\n    constructor() {\n        super(\"/api/v2/employees/groups/\");\n        this.formFields = [\n            new FormField(\"name\", \"Abteilungsname\", { autofocus: true, mobileType: 'stacked'}),\n        ];\n\n        this.cacheTimeout = 60 * 60 * 24 * 14;\n    }\n\n    newResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Abteilung hinzufügen\") }\n    newResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Abteilung hinzugefügt\") }\n    deleteResourceMethod(resourceId?: string): Promise<string> { return Promise.resolve(\"delete\") }\n    deleteResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Entfernen\") }\n    deleteResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Abteilung entfernt\") }\n\n    listParams(params: EmployeeGroupListParams) {\n        const pagesize = params.pagesize || 50;\n        const page = params.page || 1;\n        const query = params.query || '';\n\n        let url =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n            if (params.ids) url += \"&ids=\" + params.ids.join(\"|\");\n\n        return this._get(url);\n    }\n}\n\nconst employeeGroupService = new EmployeeGroupService();\n\nexport { EmployeeGroup, EmployeeGroupService, employeeGroupService }\n\nexport default employeeGroupService;\n","import BaseService, { FormField, PaginatedResponse } from './_base';\n\nimport { Timestamp } from \"./timestamps\";\nimport { AxiosResponse } from 'axios';\n\n\ninterface Timespan {\n    id: string;\n    checkin: Timestamp;\n\n    checkout?: Timestamp;\n    employee_comment?: string;\n    project_id?: string;\n\n    duration?: number;\n}\n\ninterface TimespanListParams {\n    employeeIds?: Array<string>;\n    workmonthIds?: Array<string>;\n    workdayIds?: Array<string>;\n    isoDateFrom?: string;\n    isoDateTo?: string;\n    page?: number;\n    pagesize?: number;\n    verbosity?: string;\n    order?: Array<string>;\n}\n\ninterface TimespanHistoryParams {\n    page?: number;\n    pagesize?: number;\n}\n\nclass TimespanGroup {\n    originalTimespanIds: Array<string>;\n    timespans: Array<Timespan>;\n\n    constructor() {\n        this.timespans = [];\n        this.originalTimespanIds = [];\n    }\n\n    checkin(): string { return this.timespans[0].checkin.time }\n\n    checkout(): string { return this.timespans[this.timespans.length - 1].checkout!.time }\n\n    stampTimespanIds() {\n        this.originalTimespanIds = [];\n        for (const ts of this.timespans) {\n            this.originalTimespanIds.push(ts.id);\n        }\n    }\n}\n\ninterface TimespanSetTimesBody {\n    checkin: string;\n    checkout?: string;\n    project_id?: string;\n}\n\ninterface TimespanAddTimesBody {\n    workday_id: string;\n    checkin: string;\n    checkout?: string;\n    project_id?: string;\n}\n\nclass TimespanService extends BaseService<Timespan> {\n    constructor() {\n        super(\"/api/v2/timestamps/timespans/\");\n\n        this.cacheTimeout = 60;\n    }\n\n    listParams(params: TimespanListParams): AxiosResponse<PaginatedResponse<Timespan>> {\n        params = params || {};\n        const page = params.page || 1;\n        const pagesize = params.pagesize || 50;\n\n        let query =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize);\n\n        if (params.employeeIds) query += \"&employee_ids=\" + params.employeeIds.join(\"|\");\n        if (params.workmonthIds) query += \"&workmonth_ids=\" + params.workmonthIds.join(\"|\");\n        if (params.workdayIds) query += \"&workday_ids=\" + params.workdayIds.join(\"|\");\n        if (params.verbosity) query += '&verbosity=' + params.verbosity;\n        if (params.isoDateFrom) query += '&datetime_from=' + params.isoDateFrom;\n        if (params.isoDateTo) query += '&datetime_to=' + params.isoDateTo;\n        if (params.order) query += \"&order=\" + params.order.join(\"|\");\n\n        return this._get(query) as unknown as AxiosResponse<PaginatedResponse<Timespan>>;\n    }\n\n    history(resourceId: string, params: TimespanHistoryParams) {\n        params = params || {};\n        const page = params.page || 1;\n        const pagesize = params.pagesize || 50;\n\n        const query =\n            resourceId + \"/history/\" +\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize);\n\n        return this._get(query);\n    }\n\n    setTimes(resourceId: string, body: TimespanSetTimesBody): Promise<Timespan> {\n        const query = resourceId + \"/set-times/\";\n        return this._patch(query, body) as unknown as Promise<Timespan>;\n    }\n\n    addTimes(body: TimespanAddTimesBody): Promise<Timespan> {\n        const query = \"add-times/\";\n        return this._post(query, body) as unknown as Promise<Timespan>;\n    }\n\n    updateEmployeeComment(resourceId: string, employeeComment?: string): Promise<Timespan> {\n        const query = resourceId + \"/update-employee-comment/\";\n        const payload = {\n            'employee_comment': employeeComment,\n        }\n        return this._post(query, payload) as unknown as Promise<Timespan>;\n    }\n\n    assignProject(resourceId: string, projectId?: string): Promise<Timespan> {\n        const query = resourceId + \"/assign-project/\";\n        const payload = {\n            'project_id': projectId || undefined,\n        }\n        return this._post(query, payload) as unknown as Promise<Timespan>;\n    }\n\n    modifyConsecutiveTimespans(timespanGroup: TimespanGroup): Promise<TimespanGroup> {\n        const query = \"modify-consecutive-timespans/\";\n        const newTimespans = [];\n        for (const ts of timespanGroup.timespans) {\n            newTimespans.push({\n                'checkin': ts.checkin.time,\n                'checkout': ts.checkout?.time,\n                'employee_comment': ts.employee_comment,\n                'project_id': ts.project_id,\n            });\n        }\n\n        const payload = {\n            'source_timespan_ids': timespanGroup.originalTimespanIds,\n            'new_timespans': newTimespans,\n        };\n\n        const result = this._post(query, payload) as unknown as Promise<Array<Timespan>>;\n\n        return result.then(response => {\n            timespanGroup.originalTimespanIds = response.map(ts => ts.id);\n            timespanGroup.timespans = response;\n\n            return timespanGroup\n        })\n    }\n}\n\nconst timespanService = new TimespanService();\n\nexport { Timespan, timespanService }\n","<template>\n    <span>\n        <ion-skeleton-text v-if=\"!isSolved\" :style=\"getPlaceholderStyle()\" animated></ion-skeleton-text>\n        {{ value }}\n    </span>\n</template>\n\n<style scoped>\n    ion-skeleton-text {\n        margin: 0 !important;\n        padding: 2px 0;\n    }\n</style>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue';\n\n    import { IonSkeletonText } from '@ionic/vue';\n\n    export default defineComponent({\n        components: {\n            IonSkeletonText,\n        },\n        props: {\n            promise: Object,\n            width: {\n                type: String,\n                default: '40px',\n            },\n        },\n        data() {\n            return {\n                isSolved: false,\n                value: undefined,\n            }\n        },\n        methods: {\n            getPlaceholderStyle() {\n                return {\n                    width: this.width,\n                    display: 'inline-block',\n                }\n            },\n        },\n        mounted() {\n            this.promise!.then((result: any) => {\n                this.value = result;\n                this.isSolved = true;\n            });\n        }\n    });\n</script>\n","\n    import { defineComponent } from 'vue';\n\n    import { IonSkeletonText } from '@ionic/vue';\n\n    export default defineComponent({\n        components: {\n            IonSkeletonText,\n        },\n        props: {\n            promise: Object,\n            width: {\n                type: String,\n                default: '40px',\n            },\n        },\n        data() {\n            return {\n                isSolved: false,\n                value: undefined,\n            }\n        },\n        methods: {\n            getPlaceholderStyle() {\n                return {\n                    width: this.width,\n                    display: 'inline-block',\n                }\n            },\n        },\n        mounted() {\n            this.promise!.then((result: any) => {\n                this.value = result;\n                this.isSolved = true;\n            });\n        }\n    });\n","import { render } from \"./ZeitPromiseSolver.vue?vue&type=template&id=edc77cd2&scoped=true\"\nimport script from \"./ZeitPromiseSolver.vue?vue&type=script&lang=ts\"\nexport * from \"./ZeitPromiseSolver.vue?vue&type=script&lang=ts\"\n\nimport \"./ZeitPromiseSolver.vue?vue&type=style&index=0&id=edc77cd2&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-edc77cd2\"\n\nexport default script","import { AxiosResponse } from 'axios';\nimport { BaseService, PaginatedResponse } from './_base';\n\n\ninterface PhysicalToken {\n    id: string;\n}\n\ninterface PhysicalTokenListParams {\n    page?: number;\n    pagesize?: number;\n\n    query?: string;\n    ids?: Array<string>;\n\n    fields?: Array<string>;\n}\n\n\nclass PhysicalTokenService extends BaseService<PhysicalToken> {\n    constructor() {\n        super(\"/api/v2/devices/physical-tokens/\");\n        this.cacheTimeout = 60 * 60 * 24 * 14;\n    }\n\n    list(this: PhysicalTokenService, page=1, pagesize=1000, query=''): Promise<AxiosResponse<PaginatedResponse<PhysicalToken>>> {\n        const params =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n        return this._get(params) as unknown as Promise<AxiosResponse<PaginatedResponse<PhysicalToken>>>;\n    }\n\n    listParams(this: PhysicalTokenService, params: PhysicalTokenListParams): Promise<PaginatedResponse<PhysicalToken>> {\n        params = params || {};\n\n        params.pagesize = params.pagesize || 1000;\n        params.page = params.page || 1;\n        params.query = params.query || '';\n        params.fields = params.fields || ['id'];\n        params.ids = params.ids || [];\n\n        const query =\n            '?limit=' + String(params.pagesize) +\n            '&offset=' + String((params.page - 1) * params.pagesize) +\n            '&q=' + encodeURIComponent(String(params.query)) +\n            '&fields=' + params.fields.join(\"|\") +\n            '&ids=' + params.ids.join(\"|\");\n\n        return this._get(query) as unknown as Promise<PaginatedResponse<PhysicalToken>>;\n    }\n\n    listCreate(this: PhysicalTokenService, ids: Array<string>) {\n        return this._post('', {ids, });\n    }\n\n    listDelete(this: PhysicalTokenService, ids: Array<string>) {\n        return this._post('delete/', {ids, });\n    }\n\n    listAvailable(page=1, pagesize=50, query='', additionalCardNumber=''): Promise<PaginatedResponse<PhysicalToken>> {\n        const params =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&type=available' +\n            '&q=' + encodeURIComponent(String(query)) +\n            '&additional=' + String(additionalCardNumber);\n\n        return this._get(params) as unknown as Promise<PaginatedResponse<PhysicalToken>>;\n    }\n}\n\nconst physicalTokenService = new PhysicalTokenService();\n\nexport { physicalTokenService, PhysicalTokenService, PhysicalToken }\n\nexport default physicalTokenService;\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","import { BaseService, FormField, FilterAttribute, PaginatedResponse } from './_base';\n\nimport { employeeGroupService, EmployeeGroup } from './employee-groups';\nimport { physicalTokenService, PhysicalToken } from './physical-tokens';\nimport { institutionService } from './institutions';\n\nimport branding from '../branding';\nimport { AxiosResponse } from 'axios';\n\ninterface Employee {\n    id: string;\n    created_at: string;\n    modified_at: string;\n    archived_at?: string;\n    username: string;\n    user_account_id: string;\n    employee_group_id?: string;\n    external_id?: string;\n    accounting_number?: string;\n    employee_group_name?: string;\n    is_male: boolean;\n    first_name: string;\n    last_name: string;\n    email?: string;\n    initial_password: string;\n    physical_token_id?: string;\n    can_be_deleted: boolean;\n    delete_after_archive_period?: number;\n}\n\ninterface EmployeesListParams {\n    page?: number;\n    pagesize?: number;\n    query?: string;\n    useCache?: boolean;\n\n    verbosity?: string;\n\n    ids?: Array<string>;\n    employeeGroups?: Array<string>;\n    showArchived?: boolean;\n    minimumAbsenceCount?: number;\n    absenceDaterange?: string;\n}\n\n\nclass EmployeeService extends BaseService<Employee> {\n    archivedFormFields: Array<FormField<any>>;\n\n    constructor() {\n        super(\"/api/v2/employees/employees/\");\n        this.formFields = [\n            new FormField<Employee>(\"first_name\", \"Vorname\", {autofocus: true}),\n            new FormField<Employee>(\"last_name\", \"Nachname\"),\n            new FormField<Employee>(\"email\", \"E-Mail-Adresse\", {\n                mobileType: \"stacked\",\n            }),\n            new FormField<EmployeeGroup>(\"employee_group_id\", \"Abteilung\", {\n                type: 'select',\n                remoteSourceService: employeeGroupService,\n                remoteSourceAttribute: \"name\"\n            }),\n            new FormField<PhysicalToken>(\"physical_token_id\", \"Token-Nummer\", {\n                type: 'select',\n                description: \"Die ausgewählte Token-Nummer kann zur Authentifizierung am Zeiterfassungs-Terminal verwendet werden. Nur nicht bereits zugewiesene Nummern werden angezeigt. <a target='_blank' href='/tokens/'>Token verwalten</a>\",\n                remoteSourceService: physicalTokenService,\n                remoteSourceListMethod: \"listAvailable\",\n                remoteSourceAttribute: 'id',\n                listPageSize: 1000,\n            }),\n            new FormField<Employee>(\"accounting_number\", \"Personalnummer\", { mobileType: 'stacked', description: \"Die Personalnummer wird verwendet, um den Mitarbeiter im Buchhaltungsexport zu identifizieren.\"}),\n        ];\n        if (branding.id == \"orange\")\n            this.formFields.push(new FormField<Employee>(\"external_id\", \"aQrate Benutzername\", { mobileType: 'stacked', description:  \"Der Benutzername wird verwendet, um diesen Zeitblick Mitarbeiter einem aQrate Mitarbeiter bei Authentifizierung am MFP zuzuordnen.\"}));\n        this.formFields = this.formFields.concat([\n            new FormField<Employee>(\"username\", branding.name + \" Benutzername\", {\n                mobileType: 'stacked',\n                description: \"Der Benutzername wird vom Mitarbeiter benötigt, um sich gegenüber der \" + branding.name + \" Smartphone App und dem Web-Login (https://\" + branding.url + \"/) zu authentifizieren.\",\n                isReadOnly: true,\n                showCreate: false,\n            }),\n            new FormField<Employee>(\"initial_password\", \"Vorläufiges Passwort\", { mobileType: 'stacked', isReadOnly: true, showCreate: false, }),\n        ]);\n\n        this.archivedFormFields = [\n            new FormField<Employee>(\"first_name\", \"Vorname\", {isReadOnly: true}),\n            new FormField<Employee>(\"last_name\", \"Nachname\", { isReadOnly: true }),\n            new FormField<Employee>(\"email\", \"E-Mail-Adresse\", { isReadOnly: true }),\n            new FormField<EmployeeGroup>(\"employee_group_id\", \"Abteilung\", {\n                type: 'select',\n                remoteSourceService: employeeGroupService,\n                remoteSourceAttribute: \"name\",\n                isReadOnly: true,\n            }),\n            new FormField<Employee>(\"accounting_id\", \"Personalnummer\", { description: \"Die Personalnummer wird verwendet, um den Mitarbeiter im Buchhaltungsexport zu identifizieren.\" , isReadOnly: true}),\n        ];\n        if (branding.id == \"orange\")\n            this.archivedFormFields.push(new FormField<Employee>(\"external_id\", \"aQrate Benutzername\", { description: \"Der Benutzername wird verwendet, um diesen Zeitblick Mitarbeiter einem aQrate Mitarbeiter bei Authentifizierung am MFP zuzuordnen.\", isReadOnly: true }));\n\n        this.filterAttributes = [\n            new FilterAttribute(\"showArchived\", \"Archivierte Mitarbeiter anzeigen\", \"boolean\", false, {\n                visible: this.listParams({ showArchived: true}).then((response: AxiosResponse<PaginatedResponse<EmployeeGroup>>) => {\n                    return response.data.count > 0;\n                }),\n            }),\n            new FilterAttribute(\"employeeGroups\", \"Abteilungen\", \"select\", undefined, {\n                multiple: true,\n                remoteSourceService: employeeGroupService,\n                visible: employeeGroupService.listParams({}).then((response: AxiosResponse<PaginatedResponse<EmployeeGroup>>) => {\n                    return response.data.count > 0;\n                }),\n            }),\n        ];\n\n        this.cacheTimeout = 60 * 60 * 24 * 14;\n    }\n\n    titleAttribute(): Promise<any> { return Promise.resolve((resource: any) => resource.first_name + \" \" + resource.last_name) }\n    newResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Mitarbeiter hinzufügen\") }\n    newResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Mitarbeiter hinzugefügt\") }\n\n    deleteResourceMethod(resourceId?: string): Promise<string> {\n        if (!resourceId) return Promise.resolve('');\n\n        return this.retrieve(resourceId).then(employeeResponse => {\n            if (employeeResponse.data.can_be_deleted) {\n                return Promise.resolve(\"delete\");\n            } else if (!employeeResponse.data.archived_at) {\n                return Promise.resolve(\"archive\");\n            }\n\n            return Promise.resolve('');\n        });\n    }\n    deleteResourceTitle(resourceId?: string): Promise<string> {\n        if (!resourceId) return Promise.resolve(\"Entfernen\");\n\n        return this.retrieve(resourceId).then(employeeResponse => {\n            if (employeeResponse.data.can_be_deleted) {\n                return Promise.resolve(\"Entfernen\");\n            } else if (!employeeResponse.data.archived_at) {\n                return Promise.resolve(\"Archivieren\");\n            }\n\n            return Promise.resolve('');\n        });\n    }\n    deleteResourceConfirmation(resourceId?: string): Promise<string> {\n        if (!resourceId) return Promise.resolve(\"Mitarbeiter entfernt\");\n\n        return this.retrieve(resourceId).then(employeeResponse => {\n            if (employeeResponse.data.can_be_deleted) {\n                return Promise.resolve(\"Mitarbeiter entfernt\");\n            } else if (!employeeResponse.data.archived_at) {\n                return Promise.resolve(\"Mitarbeiter archiviert\");\n            }\n\n            return Promise.resolve('');\n        });\n    }\n\n    async retrieveSettingValue(resourceId: string, categoryId: string, settingId: string): Promise<any> {\n        const employeeSettings = (await this.retrieveSettings(resourceId)).data;\n        if (categoryId in employeeSettings && settingId in employeeSettings[categoryId]) {\n            return employeeSettings[categoryId][settingId]\n        }\n\n        return institutionService.retrieveSettingValue(categoryId, settingId);\n\n    }\n\n    retrieveSettings(resourceId: string): Promise<AxiosResponse<any>> {\n        return this._get(resourceId + \"/settings/\") as unknown as Promise<AxiosResponse<any>>;\n    }\n\n    updateSettings(resourceId: string, newSettings: any) {\n        return this._post(resourceId + \"/settings/\", newSettings);\n    }\n\n    resetPassword(resourceId: string) {\n        return this._post(resourceId + \"/reset-password/\", {});\n    }\n\n    list(page=1, pagesize=50, query='', employeeGroups?: string, showArchived?: boolean) {\n        let params =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n        if (employeeGroups != undefined) {\n            params = params + '&employee_groups=' + employeeGroups;\n        }\n\n        if (showArchived === true) {\n            params = params + '&archived';\n        }\n\n        return this._get(params);\n    }\n\n    listParams(params: EmployeesListParams) {\n        const pagesize = params.pagesize || 50;\n        const page = params.page || 1;\n        const query = params.query || '';\n\n        let url =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n        if (params.verbosity) url += \"&verbosity=\" + params.verbosity;\n        if (params.ids) url += \"&ids=\" + params.ids.join(\"|\");\n        if (params.employeeGroups) url += \"&employee_groups=\" + params.employeeGroups.join(\"|\");\n        if (params.showArchived === true) url = url + '&archived';\n        if (params.minimumAbsenceCount) url = url + '&absence_count__gte=' + String(params.minimumAbsenceCount);\n        if (params.absenceDaterange) url = url + '&absence_daterange=' + params.absenceDaterange;\n\n        return this._get(url, params.useCache !== false);\n    }\n\n    archive(resourceId: string) {\n        return this._post(resourceId + \"/archive/\", {});\n    }\n}\n\nconst employeeService = new EmployeeService();\n\nexport { EmployeeService, employeeService, Employee };\n\nexport default employeeService;\n","import { Timespan } from './timespans';\nimport BaseService from './_base';\n\n\n\ninterface WorkdayReport {\n    break_duration: number;\n    checkin: string;\n    checkout?: string;\n    id: string;\n    note?: string;\n    short_break_policy: string;\n    timespans: Array<Timespan>;\n}\n\ninterface WorkdayReprotListParams {\n    page?: number;\n    pagesize?: number;\n    daterange?: Array<string>;\n}\n\nclass EmployeeReportService extends BaseService<WorkdayReport> {\n    constructor() {\n        super(\"/api/v2/reports/employees/\");\n    }\n\n    workdayReports(employeeId: string, params: WorkdayReprotListParams = {}) {\n        const page = params.page || 1;\n        const pagesize = params.pagesize || 50;\n        const daterange = params.daterange;\n\n        let query =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize);\n\n        if (daterange) query += \"&daterange=\" + daterange[0] + \"|\" + daterange[1];\n\n        return this._get(employeeId + '/' + query);\n    }\n}\n\nconst employeeReportService = new EmployeeReportService();\n\nexport { employeeReportService, WorkdayReport }\n","import { AxiosResponse } from 'axios';\nimport { BaseService, FormField, PaginatedResponse } from './_base';\n\ninterface ProjectListParams {\n    ids?: Array<string>;\n    includeArchived?: boolean;\n    highlighted?: boolean;\n}\n\ninterface Project {\n    id: string;\n    archived_at?: string;\n    name: string;\n    code: string;\n    color: string;\n    total_duration: number;\n}\n\nclass ProjectService extends BaseService<Project> {\n    archivedFormFields: Array<FormField<any>>;\n\n    constructor() {\n        super(\"/api/v2/projects/projects/\");\n        this.formFields = [\n            new FormField(\"name\", \"Name\", { autofocus: true }),\n            new FormField(\"code\", \"Code\", {}),\n            new FormField(\"highlighted\", \"Hervorgehoben\", {\n                type: 'bool',\n                description: \"Hervorgehobene Projekte können schneller durch Mitarbeiter ausgewählt werden. Es können maximal 3 Projekte hervorgehoben werden.\",\n            }),\n            new FormField(\"color\", \"Farbe\", { type: 'color' }),\n        ];\n\n        this.archivedFormFields = [\n            new FormField(\"name\", \"Name\", { isReadOnly: true }),\n            new FormField(\"code\", \"Code\", { isReadOnly: true }),\n            new FormField(\"highlighted\", \"Hervorgehoben\", {\n                type: 'bool',\n                isReadOnly: true,\n                description: \"Hervorgehobene Projekte können schneller durch Mitarbeiter ausgewählt werden. Es können maximal 3 Projekte hervorgehoben werden.\",\n            }),\n            new FormField(\"color\", \"Farbe\", { type: 'color', isReadOnly: true }),\n        ];\n\n        this.cacheTimeout = 60 * 5;\n    }\n\n    newResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Projekt hinzufügen\") }\n    newResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Projekt hinzugefügt\") }\n    deleteResourceMethod(resourceId?: string): Promise<string> { return Promise.resolve(\"archive\") }\n    deleteResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Archivieren\") }\n    deleteResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Projekt archiviert\") }\n\n    listParams(page=1, pagesize=50, query='', params: ProjectListParams): Promise<AxiosResponse<PaginatedResponse<Project>>> {\n        params = params || {};\n\n        let url =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n        if (params.ids && params.ids.length > 0) url += '&ids=' + params.ids.join(\"|\");\n        if ((params.ids && params.ids.length > 0) || params.includeArchived) url += '&include-archived';\n\n        if (params.highlighted) url += '&highlighted';\n\n        return this._get(url) as unknown as Promise<AxiosResponse<PaginatedResponse<Project>>>;\n    }\n\n    archive(resourceId: string): Promise<AxiosResponse<Project>> {\n        const promise = this._post(resourceId + \"/archive/\", {});\n\n        // Clean cache after archive request was successfull\n        promise.then(() => {\n            this.clearCache();\n        });\n\n        return promise as unknown as Promise<AxiosResponse<Project>>;\n    }\n}\n\nconst projectService = new ProjectService();\n\nexport { projectService, ProjectService, Project };\n\nexport default projectService;\n","const colors = [\n    { code: '4e79a7', text: 'f9f9f9' },\n    { code: '59a14f', text: 'f9f9f9' },\n    { code: '9c755f', text: 'f9f9f9' },\n    { code: 'f28e2b', text: 'f9f9f9' },\n    { code: 'edc948', text: '222222' },\n    { code: 'bab0ac', text: '222222' },\n    { code: 'e15759', text: 'f9f9f9' },\n    { code: 'b07aa1', text: 'f9f9f9' },\n    { code: '76b7b2', text: 'f9f9f9' },\n    { code: 'ff9da7', text: '222222' },\n    { code: 'eeeeee', text: '222222' },\n]\n\nexport { colors };\n"],"sourceRoot":""}