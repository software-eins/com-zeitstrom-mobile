{"version":3,"sources":["webpack:///./src/components/helpers/ZeitPromiseSolver.vue?8db3","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./src/components/ui/ZeitGrid.vue","webpack:///./src/components/ui/ZeitGrid.vue?55d4","webpack:///./src/components/ui/ZeitGrid.vue?2ce3","webpack:///./node_modules/core-js/modules/es.array.for-each.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./src/components/ui/ZeitGrid.vue?3f4b","webpack:///./src/components/ui/ZeitList.vue","webpack:///./src/components/ui/ZeitListFilter.vue","webpack:///./src/components/ui/ZeitSelect.vue","webpack:///./src/components/ui/ZeitSelect.vue?94cd","webpack:///./src/components/ui/ZeitSelect.vue?eb7a","webpack:///./src/components/ui/ZeitListFilter.vue?924b","webpack:///./src/components/ui/ZeitListFilter.vue?e03c","webpack:///./src/components/ui/ZeitList.vue?9cec","webpack:///./src/components/ui/ZeitList.vue?fc94","webpack:///./src/components/helpers/ZeitPromiseSolver.vue","webpack:///./src/components/helpers/ZeitPromiseSolver.vue?248f","webpack:///./src/components/helpers/ZeitPromiseSolver.vue?d90d","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptors.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"],"names":["global","DOMIterables","forEach","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","prototype","error","$forEach","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","module","exports","callbackfn","this","arguments","length","undefined","class","isLoadingEntries","slot","reloadEntries","disabled","refreshEnabled","selectable","lines","fill","color","localSelection","entries","entry","key","id","detail","isLoadingEntry","showDetail","button","handleItemClick","style","getBorderStyle","checked","isChecked","$virtual","getMobileColumns","column","idx","getCellValue","ios","icon","md","promise","$display","pagination","total","appendNextPage","$event","threshold","nonVirtualEntries","loading-text","pageSize","animated","components","IonButton","IonList","IonItem","IonLabel","IonIcon","IonInfiniteScroll","IonCheckbox","IonInfiniteScrollContent","IonSpinner","ZeitPromiseSolver","IonRefresher","IonRefresherContent","IonSkeletonText","props","service","Object","listMethod","type","String","default","searchQuery","columns","Array","listParameters","basePath","Boolean","selection","nullSelectable","nullLabel","data","mountedFullPath","currentPage","actionsLoading","watch","$route","newRoute","fullPath","deep","handler","newValue","oldValue","JSON","stringify","$emit","methods","append","clearCache","Promise","resolve","listService","bind","params","page","pagesize","query","promises","push","ids","limit","then","response","results","count","concat","filter","e","all","selectedEntries","selectedEntryIds","map","listEntries","indexOf","nullEntries","event","target","complete","level","mobileLevel","formatter","showDetails","retrieve","path","$router","_allElementsSelected","_toggleSelection","splice","_showActionMenu","c","beforeMount","parse","mounted","render","__scopeId","$","proto","forced","$filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","i","source","getOwnPropertyDescriptors","defineProperties","isFilterOpenRef","is-open","setFilterDialogState","swipeToClose","filters","gridParameters","excludeFilters","getExclusionFilters","updateGridParameters","translucent","segmentFilter","resourceType","segmentFilterValue","options","option","filterSegmenChanged","label","hasAddPermission","router-link","add","fullscreen","collapse","size","showSearch","totalResultCount","placeholder","searchPlaceholder","searchQueryChange","filterAttributes","appliedFilterCount","funnelOutline","funnel","fields","gridSearchQuery","getListParameters","resetFiltersAndCloseModal","closeModal","localFilters","cleanFilterAttributes","filterAttribute","updateFilter","srcElement","openSelectModal","selectModals","title","remoteService","remoteSourceService","multiple","submitLocalSelection","updateLocalSelection","IonSearchbar","IonPage","IonHeader","IonToolbar","IonButtons","IonTitle","IonContent","ZeitGrid","updateSelection","computed","queryChangeEvent","IonModal","IonNote","IonToggle","ZeitSelect","dismiss","resetFilters","defaultValue","dismissModal","updateFilterAttributes","fa","visible","filterAttributeVisibilities","a","IonMenuButton","IonText","IonSegment","IonSegmentButton","ZeitListFilter","totalResultCountPromise","Function","accountService","account","updateTotalResultCount","addPermission","meta","permissionSpace","permissions","exclusionFilters","cleanedAttributes","result","filterAttributeId","exclude","setup","newState","list","isSolved","getPlaceholderStyle","width","display","toAbsoluteIndex","toInteger","toLength","toObject","arraySpeciesCreate","createProperty","ACCESSORS","0","1","max","Math","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","start","deleteCount","insertCount","actualDeleteCount","A","k","from","to","O","len","actualStart","argumentsLength","TypeError","nativeKeys","fails","FAILS_ON_PRIMITIVES","stat","it","DESCRIPTORS","toIndexedObject","getOwnPropertyDescriptorModule","sham","descriptor","f","index","nativeGetOwnPropertyDescriptor","FORCED"],"mappings":"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","file":"js/chunk-b3882db6.f37c295d.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ZeitPromiseSolver.vue?vue&type=style&index=0&id=edc77cd2&scoped=true&lang=css\"","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","<template>\n    <div>\n        <template v-if=\"!isLoadingEntries\">\n            <ion-refresher slot=\"fixed\" @ionRefresh=\"reloadEntries(false, true)\" :disabled=\"!refreshEnabled\">\n                <ion-refresher-content></ion-refresher-content>\n            </ion-refresher>\n            <ion-list>\n                <ion-item v-if=\"selectable\" lines=\"none\">\n                    <ion-button\n                        fill=\"outline\"\n                        color=\"medium\"\n                        @click=\"localSelection = undefined\"\n                        :disabled=\"localSelection === undefined\"\n                    >Alle auswählen</ion-button>\n                    <ion-button\n                        fill=\"outline\"\n                        color=\"medium\"\n                        @click=\"localSelection = []\"\n                        :disabled=\"localSelection !== undefined && localSelection.length == 0\"\n                    >Keine auswählen</ion-button>\n                </ion-item>\n                <ion-item\n                    v-for=\"entry of entries\" :key=\"entry.id\"\n                    :detail=\"isLoadingEntry != entry.id && showDetail\"\n                    button\n                    @click=\"handleItemClick(entry)\"\n                    :style=\"getBorderStyle(entry)\"\n                >\n                    <ion-checkbox\n                        slot=\"start\"\n                        color=\"medium\"\n                        v-if=\"selectable\"\n                        class=\"no-pointer-events\"\n                        :class=\"{'opacity-25': localSelection === undefined}\"\n                        :checked=\"isChecked(entry)\"\n                    />\n                    <ion-label v-if=\"!entry.$virtual\">\n                        <h2>\n                            <template v-for=\"(column, idx) of getMobileColumns('h2')\">\n                                {{ getCellValue(entry, column) }}<template v-if=\"idx < getMobileColumns('h2').length - 1\">&nbsp;·&nbsp;</template>\n                            </template>\n                            <template v-for=\"(column, idx) of getMobileColumns('h2-icons')\" :key=\"idx\">\n                                &nbsp;<ion-icon :color=\"getCellValue(entry, column).color\" style=\"position: absolute; top: 11px;\" v-if=\"getCellValue(entry, column)\" :ios=\"getCellValue(entry, column).icon\" :md=\"getCellValue(entry, column).icon\"></ion-icon>\n                            </template>\n                        </h2>\n                        <p>\n                            <span v-for=\"(column, idx) of getMobileColumns('p')\" :key=\"idx\">\n                                <template v-if=\"!column.promise\">{{ getCellValue(entry, column) }}</template>\n                                <zeit-promise-solver v-if=\"column.promise\" :promise=\"column.promise(entry)\"></zeit-promise-solver>\n\n                                <template v-if=\"idx < getMobileColumns('p').length - 1\">&nbsp;·&nbsp;</template>\n                            </span>\n                        </p>\n                    </ion-label>\n                    <ion-label v-if=\"entry.$virtual\">\n                        <h2>{{ entry.$display }}</h2>\n                    </ion-label>\n                    <ion-spinner slot=\"end\" v-if=\"isLoadingEntry == entry.id\" />\n                </ion-item>\n            </ion-list>\n\n            <div v-if=\"entries.length > 0 && pagination.total <= entries.length\" class=\"mx-2 my-4 flex justify-center text-gray-500\">\n                {{ entries.length }}&nbsp;<span v-if=\"entries.length == 1\">Eintrag</span><span v-else>Einträge</span>\n            </div>\n\n            <div v-if=\"pagination.total == 0\" class=\"mx-2 my-4 flex justify-center text-gray-500\">\n                Keine Ergebnisse\n            </div>\n\n            <ion-infinite-scroll\n                @ionInfinite=\"appendNextPage($event)\"\n                threshold=\"100px\"\n                :disabled=\"entries.length > 0 && pagination.total == nonVirtualEntries().length\"\n            >\n                <ion-infinite-scroll-content\n                    class=\"mt-4\"\n                    :loading-text=\"'Lade weitere ' + pagination.pageSize + ' Einträge…'\">\n                </ion-infinite-scroll-content>\n            </ion-infinite-scroll>\n        </template>\n        <template v-if=\"isLoadingEntries\">\n            <ion-list>\n                <ion-item :detail=\"true\" v-for=\"idx in 19\" :key=\"idx\">\n                    <ion-label>\n                        <h2><ion-skeleton-text animated class=\"inline-block\" style=\"width: 50%;\"></ion-skeleton-text></h2>\n                        <p><ion-skeleton-text animated class=\"inline-block\" style=\"width: 70%;\"></ion-skeleton-text></p>\n                    </ion-label>\n                </ion-item>\n            </ion-list>\n        </template>\n    </div>\n</template>\n\n<style scoped>\n    .no-pointer-events {\n        pointer-events: none;\n    }\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nimport {\n    IonButton, IonList, IonItem, IonLabel, IonIcon, IonInfiniteScroll, IonCheckbox,\n    IonInfiniteScrollContent, IonSpinner, IonRefresher, IonRefresherContent, IonSkeletonText\n} from '@ionic/vue';\n\nimport ZeitPromiseSolver from '../helpers/ZeitPromiseSolver.vue';\n\n\nexport interface GridColumn {\n    id?: string;\n    label?: string;\n    default?: string;\n\n    hideDesktop?: boolean;\n\n    formatter?: Function;\n    mobileLevel?: string;\n}\n\n\nexport class RowIcon {\n    icon: any;\n    color?: string;\n\n    constructor(icon: string, color?: string) {\n        this.icon = icon;\n        this.color = color || \"primary\";\n    }\n}\n\n\nexport default defineComponent({\n    components: {\n        IonButton, IonList, IonItem, IonLabel, IonIcon, IonInfiniteScroll, IonCheckbox, IonInfiniteScrollContent, IonSpinner,\n        ZeitPromiseSolver, IonRefresher, IonRefresherContent, IonSkeletonText,\n    },\n    props: {\n        service: Object,\n        listMethod: {\n            type: String,\n            default: 'list',\n        },\n        searchQuery: {\n            type: String,\n            default: '',\n        },\n        columns: {\n            type: Array,\n            // default: null,\n        },\n        listParameters: {\n            type: Object,\n            // default: function() { return {} },\n        },\n        basePath: {\n            type: String,\n        },\n        showDetail: { type: Boolean, default: true},\n\n        selectable: {\n            type: Boolean,\n            default: false,\n        },\n        selection: {\n            type: Array,\n            default: undefined,\n        },\n        nullSelectable: {\n            type: Boolean,\n            default: false,\n        },\n        nullLabel: {\n            type: String,\n            default: 'Keine Auswahl',\n        },\n        refreshEnabled: {\n            type: Boolean,\n            default: true,\n        },\n    },\n    data() {\n        return {\n            entries: [] as any[],\n            localSelection: undefined as (string[] | undefined),\n\n            mountedFullPath: undefined as (string | undefined),\n\n            pagination: {\n                total: null,\n                currentPage: 1,\n                pageSize: 50,\n            },\n\n            actionsLoading: {},\n\n            isLoadingEntries: true,\n            isLoadingEntry: undefined,\n        }\n    },\n    watch: {\n        searchQuery: function() {\n            this.pagination.currentPage = 1;\n            this.reloadEntries();\n        },\n        $route: function(newRoute) {\n            if (this.mountedFullPath == newRoute.fullPath) {\n                this.reloadEntries();\n            }\n        },\n        listParameters: {\n            deep: true,\n            handler(newValue, oldValue) {\n                if (JSON.stringify(newValue) != JSON.stringify(oldValue)) {\n                    this.pagination.currentPage = 1;\n                    this.reloadEntries();\n                }\n            },\n        },\n        localSelection: {\n            deep: true,\n            handler(newValue) {\n                this.$emit(\"update:selection\", newValue);\n            },\n        }\n    },\n    methods: {\n        reloadEntries(append=false, clearCache=false) {\n            if (this.service === undefined) return Promise.resolve([]);\n\n            if (clearCache) this.service.clearCache();\n\n            const listService = this.service[this.listMethod].bind(this.service);\n\n            const params = {\n                page: this.pagination.currentPage,\n                pagesize: this.pagination.pageSize,\n                query: this.searchQuery,\n                ...this.listParameters,\n            };\n\n            if (!append) {\n                this.isLoadingEntries = true;\n            }\n\n            const promises = [];\n\n            // #0: Selected entries\n            if (append || this.localSelection === undefined || this.localSelection.length == 0) {\n                promises.push(new Promise(resolve => { resolve([]) }));\n            } else {\n                // TODO: Display all selected items on top if selected more than provided here\n                promises.push(\n                    listService({...params, ids: this.localSelection, limit: 1000})\n                    .then((response: any) => {\n                        return response.data.results;\n                    })\n                );\n            }\n\n            // #1: List entries\n            promises.push(\n                listService(params)\n                .then((response: any) => {\n                    this.pagination.total = response.data.count;\n\n                    let entries;\n                    if (append) {\n                        entries = this.entries.concat(response.data.results);\n                    } else {\n                        entries = response.data.results;\n                    }\n\n                    // Remove virtual elements\n                    entries = entries.filter((e: any) => !e.$virtual);\n\n                    return entries\n                })\n            );\n\n            return Promise.all(promises).then((results) => {\n                const selectedEntries = results[0];\n                const selectedEntryIds = selectedEntries.map((e: any) => e.id);\n                let listEntries = results[1];\n\n                listEntries = listEntries.filter((e: any) => selectedEntryIds.indexOf(e.id) == -1);\n\n                const nullEntries = [];\n                if (this.nullSelectable) {\n                    nullEntries.push({\n                        id: 'null',\n                        $virtual: true,\n                        $display: this.nullLabel,\n                    });\n                }\n\n                this.entries = [...nullEntries, ...selectedEntries, ...listEntries];\n                this.isLoadingEntries = false;\n\n                return this.entries;\n            });\n        },\n\n        appendNextPage(event: any) {\n            this.pagination.currentPage += 1;\n            this\n                .reloadEntries(true)\n                .then(() => {\n                    // Reset the state of the infinite scroll element\n                    event.target.complete();\n                });\n        },\n\n        nonVirtualEntries() {\n            return this.entries.filter((e: any) => !e.$virtual);\n        },\n\n        getMobileColumns(level: string) {\n            if (!this.columns) return [];\n\n            return this.columns.filter((column: any) => column.mobileLevel == level);\n        },\n\n        getCellValue(entry: any, column: any) { // TODO: Use GridColumn instead of any\n            if (column.formatter) return column.formatter(entry);\n            return entry[column.id] || column.default;\n        },\n\n        showDetails(entry: any) {\n            if (!this.service) return;\n\n            // Prefetch model - we discard the result since the next page will\n            // be able to utilize the cache of the underlying service\n            this.service.retrieve(entry.id).then(() => {\n                let basePath = this.basePath;\n                if (basePath === undefined) basePath = this.$route.fullPath;\n\n                const path = basePath + entry.id + \"/\";\n\n                this.$router.push({path}).then(() => {\n                    this.isLoadingEntry = undefined;\n                });\n            });\n        },\n\n        _allElementsSelected() {\n            return (\n                this.localSelection === undefined ||\n                this.pagination.total && this.localSelection.length == this.pagination.total\n            )\n        },\n\n        _toggleSelection(entry: any) {\n            // Set element as only selected element\n            if (this.localSelection === undefined) {\n                this.localSelection = [entry.id];\n                return\n            }\n            const idx = this.localSelection.indexOf(entry.id);\n\n            if (idx > -1) {\n                // Remove element from selection\n                this.localSelection.splice(idx, 1);\n                return\n            }\n\n            // Add element to selection\n            this.localSelection.push(entry.id);\n\n            // If all elements are selected, set the selection to undefined\n            if (this._allElementsSelected()) this.localSelection = undefined;\n        },\n\n        _showActionMenu(entry: any) {\n            this.isLoadingEntry = entry.id;\n            this.showDetails(entry);\n        },\n\n        handleItemClick(entry: any) {\n            if (this.selectable) {\n                this._toggleSelection(entry);\n                return\n            }\n\n            if (this.showDetail) {\n                this._showActionMenu(entry);\n                return\n            }\n        },\n\n        getBorderStyle(entry: any) {\n            const columns = this.columns || [];\n            for (const column of columns.filter((c: any) => c.mobileLevel == \"colorborder\")) {\n               return {\n                    'border-left-width': '10px',\n                    'border-left-color': '#' + entry[(column as any).id],\n                }\n            }\n            return {}\n        },\n\n        isChecked(entry: { id: string }) {\n            return (\n                this.localSelection === undefined ||\n                (this.localSelection as unknown as Array<string>).indexOf(entry.id) > -1\n            );\n        },\n\n    },\n    beforeMount() {\n        if (this.selection !== undefined) this.localSelection = JSON.parse(JSON.stringify(this.selection));\n        this.reloadEntries();\n    },\n    mounted() {\n        this.mountedFullPath = this.$route.fullPath;\n    },\n})\n</script>\n","\nimport { defineComponent } from 'vue';\n\nimport {\n    IonButton, IonList, IonItem, IonLabel, IonIcon, IonInfiniteScroll, IonCheckbox,\n    IonInfiniteScrollContent, IonSpinner, IonRefresher, IonRefresherContent, IonSkeletonText\n} from '@ionic/vue';\n\nimport ZeitPromiseSolver from '../helpers/ZeitPromiseSolver.vue';\n\n\nexport interface GridColumn {\n    id?: string;\n    label?: string;\n    default?: string;\n\n    hideDesktop?: boolean;\n\n    formatter?: Function;\n    mobileLevel?: string;\n}\n\n\nexport class RowIcon {\n    icon: any;\n    color?: string;\n\n    constructor(icon: string, color?: string) {\n        this.icon = icon;\n        this.color = color || \"primary\";\n    }\n}\n\n\nexport default defineComponent({\n    components: {\n        IonButton, IonList, IonItem, IonLabel, IonIcon, IonInfiniteScroll, IonCheckbox, IonInfiniteScrollContent, IonSpinner,\n        ZeitPromiseSolver, IonRefresher, IonRefresherContent, IonSkeletonText,\n    },\n    props: {\n        service: Object,\n        listMethod: {\n            type: String,\n            default: 'list',\n        },\n        searchQuery: {\n            type: String,\n            default: '',\n        },\n        columns: {\n            type: Array,\n            // default: null,\n        },\n        listParameters: {\n            type: Object,\n            // default: function() { return {} },\n        },\n        basePath: {\n            type: String,\n        },\n        showDetail: { type: Boolean, default: true},\n\n        selectable: {\n            type: Boolean,\n            default: false,\n        },\n        selection: {\n            type: Array,\n            default: undefined,\n        },\n        nullSelectable: {\n            type: Boolean,\n            default: false,\n        },\n        nullLabel: {\n            type: String,\n            default: 'Keine Auswahl',\n        },\n        refreshEnabled: {\n            type: Boolean,\n            default: true,\n        },\n    },\n    data() {\n        return {\n            entries: [] as any[],\n            localSelection: undefined as (string[] | undefined),\n\n            mountedFullPath: undefined as (string | undefined),\n\n            pagination: {\n                total: null,\n                currentPage: 1,\n                pageSize: 50,\n            },\n\n            actionsLoading: {},\n\n            isLoadingEntries: true,\n            isLoadingEntry: undefined,\n        }\n    },\n    watch: {\n        searchQuery: function() {\n            this.pagination.currentPage = 1;\n            this.reloadEntries();\n        },\n        $route: function(newRoute) {\n            if (this.mountedFullPath == newRoute.fullPath) {\n                this.reloadEntries();\n            }\n        },\n        listParameters: {\n            deep: true,\n            handler(newValue, oldValue) {\n                if (JSON.stringify(newValue) != JSON.stringify(oldValue)) {\n                    this.pagination.currentPage = 1;\n                    this.reloadEntries();\n                }\n            },\n        },\n        localSelection: {\n            deep: true,\n            handler(newValue) {\n                this.$emit(\"update:selection\", newValue);\n            },\n        }\n    },\n    methods: {\n        reloadEntries(append=false, clearCache=false) {\n            if (this.service === undefined) return Promise.resolve([]);\n\n            if (clearCache) this.service.clearCache();\n\n            const listService = this.service[this.listMethod].bind(this.service);\n\n            const params = {\n                page: this.pagination.currentPage,\n                pagesize: this.pagination.pageSize,\n                query: this.searchQuery,\n                ...this.listParameters,\n            };\n\n            if (!append) {\n                this.isLoadingEntries = true;\n            }\n\n            const promises = [];\n\n            // #0: Selected entries\n            if (append || this.localSelection === undefined || this.localSelection.length == 0) {\n                promises.push(new Promise(resolve => { resolve([]) }));\n            } else {\n                // TODO: Display all selected items on top if selected more than provided here\n                promises.push(\n                    listService({...params, ids: this.localSelection, limit: 1000})\n                    .then((response: any) => {\n                        return response.data.results;\n                    })\n                );\n            }\n\n            // #1: List entries\n            promises.push(\n                listService(params)\n                .then((response: any) => {\n                    this.pagination.total = response.data.count;\n\n                    let entries;\n                    if (append) {\n                        entries = this.entries.concat(response.data.results);\n                    } else {\n                        entries = response.data.results;\n                    }\n\n                    // Remove virtual elements\n                    entries = entries.filter((e: any) => !e.$virtual);\n\n                    return entries\n                })\n            );\n\n            return Promise.all(promises).then((results) => {\n                const selectedEntries = results[0];\n                const selectedEntryIds = selectedEntries.map((e: any) => e.id);\n                let listEntries = results[1];\n\n                listEntries = listEntries.filter((e: any) => selectedEntryIds.indexOf(e.id) == -1);\n\n                const nullEntries = [];\n                if (this.nullSelectable) {\n                    nullEntries.push({\n                        id: 'null',\n                        $virtual: true,\n                        $display: this.nullLabel,\n                    });\n                }\n\n                this.entries = [...nullEntries, ...selectedEntries, ...listEntries];\n                this.isLoadingEntries = false;\n\n                return this.entries;\n            });\n        },\n\n        appendNextPage(event: any) {\n            this.pagination.currentPage += 1;\n            this\n                .reloadEntries(true)\n                .then(() => {\n                    // Reset the state of the infinite scroll element\n                    event.target.complete();\n                });\n        },\n\n        nonVirtualEntries() {\n            return this.entries.filter((e: any) => !e.$virtual);\n        },\n\n        getMobileColumns(level: string) {\n            if (!this.columns) return [];\n\n            return this.columns.filter((column: any) => column.mobileLevel == level);\n        },\n\n        getCellValue(entry: any, column: any) { // TODO: Use GridColumn instead of any\n            if (column.formatter) return column.formatter(entry);\n            return entry[column.id] || column.default;\n        },\n\n        showDetails(entry: any) {\n            if (!this.service) return;\n\n            // Prefetch model - we discard the result since the next page will\n            // be able to utilize the cache of the underlying service\n            this.service.retrieve(entry.id).then(() => {\n                let basePath = this.basePath;\n                if (basePath === undefined) basePath = this.$route.fullPath;\n\n                const path = basePath + entry.id + \"/\";\n\n                this.$router.push({path}).then(() => {\n                    this.isLoadingEntry = undefined;\n                });\n            });\n        },\n\n        _allElementsSelected() {\n            return (\n                this.localSelection === undefined ||\n                this.pagination.total && this.localSelection.length == this.pagination.total\n            )\n        },\n\n        _toggleSelection(entry: any) {\n            // Set element as only selected element\n            if (this.localSelection === undefined) {\n                this.localSelection = [entry.id];\n                return\n            }\n            const idx = this.localSelection.indexOf(entry.id);\n\n            if (idx > -1) {\n                // Remove element from selection\n                this.localSelection.splice(idx, 1);\n                return\n            }\n\n            // Add element to selection\n            this.localSelection.push(entry.id);\n\n            // If all elements are selected, set the selection to undefined\n            if (this._allElementsSelected()) this.localSelection = undefined;\n        },\n\n        _showActionMenu(entry: any) {\n            this.isLoadingEntry = entry.id;\n            this.showDetails(entry);\n        },\n\n        handleItemClick(entry: any) {\n            if (this.selectable) {\n                this._toggleSelection(entry);\n                return\n            }\n\n            if (this.showDetail) {\n                this._showActionMenu(entry);\n                return\n            }\n        },\n\n        getBorderStyle(entry: any) {\n            const columns = this.columns || [];\n            for (const column of columns.filter((c: any) => c.mobileLevel == \"colorborder\")) {\n               return {\n                    'border-left-width': '10px',\n                    'border-left-color': '#' + entry[(column as any).id],\n                }\n            }\n            return {}\n        },\n\n        isChecked(entry: { id: string }) {\n            return (\n                this.localSelection === undefined ||\n                (this.localSelection as unknown as Array<string>).indexOf(entry.id) > -1\n            );\n        },\n\n    },\n    beforeMount() {\n        if (this.selection !== undefined) this.localSelection = JSON.parse(JSON.stringify(this.selection));\n        this.reloadEntries();\n    },\n    mounted() {\n        this.mountedFullPath = this.$route.fullPath;\n    },\n})\n","import { render } from \"./ZeitGrid.vue?vue&type=template&id=76a8b196&scoped=true\"\nimport script from \"./ZeitGrid.vue?vue&type=script&lang=ts\"\nexport * from \"./ZeitGrid.vue?vue&type=script&lang=ts\"\n\nimport \"./ZeitGrid.vue?vue&type=style&index=0&id=76a8b196&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-76a8b196\"\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ZeitGrid.vue?vue&type=style&index=0&id=76a8b196&scoped=true&lang=css\"","<template>\n  <ion-page>\n\n    <ion-modal\n      v-if=\"isFilterOpenRef !== undefined\"\n      :is-open=\"isFilterOpenRef\"\n      @onDidDismiss=\"setFilterDialogState(false)\"\n      :swipeToClose=\"true\"\n    >\n      <zeit-list-filter\n        :service=\"service\"\n        :filters=\"gridParameters\"\n        :excludeFilters=\"getExclusionFilters()\"\n        @onFilterUpdate=\"updateGridParameters($event)\"\n      />\n    </ion-modal>\n\n    <ion-header :translucent=\"true\">\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-menu-button color=\"primary\"></ion-menu-button>\n        </ion-buttons>\n\n        <ion-title v-if=\"!segmentFilter\">{{ resourceType }}</ion-title>\n        <ion-segment v-if=\"segmentFilter\" :value=\"segmentFilterValue\">\n          <ion-segment-button\n            v-for=\"option of segmentFilter.options\"\n            :key=\"option.value\"\n            :value=\"option.value\"\n            @click=\"filterSegmenChanged(option.value)\"\n          >\n            {{ option.label }}\n          </ion-segment-button>\n        </ion-segment>\n\n        <ion-buttons slot=\"end\">\n          <ion-button :router-link=\"basePath + 'add/'\" v-if=\"hasAddPermission()\">\n            <ion-icon slot=\"icon-only\" :icon=\"add\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">{{ resourceType }}</ion-title>\n        </ion-toolbar>\n\n        <ion-toolbar v-if=\"showSearch && totalResultCount > 0\">\n          <ion-searchbar\n              :placeholder=\"searchPlaceholder\"\n              animated\n              @ion-change=\"searchQueryChange\"\n          ></ion-searchbar>\n          <ion-buttons slot=\"end\">\n            <ion-button @click=\"setFilterDialogState(true)\"  v-if=\"filterAttributes && filterAttributes.length > 0\">\n              <ion-icon slot=\"icon-only\" :icon=\"appliedFilterCount() == 0 ? funnelOutline : funnel\" style=\"width: 24px\"></ion-icon>\n            </ion-button>\n          </ion-buttons>\n        </ion-toolbar>\n\n        <ion-toolbar class=\"px-3 pb-4\" v-if=\"totalResultCount == 0\">\n          <ion-text color=\"medium\">\n            <slot name=\"no-results\" />\n            <span v-if=\"hasAddPermission()\">\n              <br /><br /><slot name=\"no-results-add\" />\n            </span>\n          </ion-text>\n        </ion-toolbar>\n\n      </ion-header>\n\n      <zeit-grid\n        v-if=\"totalResultCount > 0\"\n        :service=\"service\"\n        :listMethod=\"listMethod\"\n        :columns=\"fields\"\n        :searchQuery=\"gridSearchQuery\"\n        :listParameters=\"getListParameters()\"\n        :basePath=\"basePath\"\n        :showDetail=\"showDetail\"\n      />\n\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent, ref } from 'vue';\n\n    import { add, funnelOutline, funnel } from 'ionicons/icons';\n    import {\n        IonButtons, IonButton, IonIcon, IonContent, IonHeader, IonMenuButton,\n        IonPage, IonTitle, IonToolbar, IonSearchbar, IonModal, IonText, IonSegment,\n        IonSegmentButton,\n    } from '@ionic/vue';\n\n    import ZeitGrid from './ZeitGrid.vue';\n    import ZeitListFilter from './ZeitListFilter.vue';\n    import { FilterAttribute } from '../../services/_base';\n    import { Account, accountService } from '../../services/accounts';\n    import { AxiosResponse } from 'axios';\n\n    export default defineComponent({\n        components: {\n          IonButtons, IonButton, IonIcon, IonContent, IonHeader, IonMenuButton,\n          IonPage, IonTitle, IonToolbar, IonSearchbar, IonModal, IonText, IonSegment,\n          IonSegmentButton,\n\n          ZeitGrid, ZeitListFilter,\n        },\n        props: {\n          resourceType: String,\n          basePath: String,\n          searchPlaceholder: String,\n          service: Object,\n          fields: Array,\n\n          totalResultCountPromise: {\n            type: Function,\n            default: undefined,\n          },\n\n          listParameters: {\n              type: Object,\n              default: () => {return {}},\n          },\n\n          segmentFilter: Object,\n\n          showSearch: { type: Boolean, default: true},\n          showDetail: { type: Boolean, default: true},\n        },\n        data() {\n          return {\n            accountService,\n\n            add,\n            funnel,\n            funnelOutline,\n            gridSearchQuery: '',\n            gridParameters: {} as any,\n\n            mountedFullPath: undefined as (string | undefined),\n\n            listMethod: 'listParams',\n\n            account: undefined as Account | undefined,\n\n            filterAttributes: undefined as (Array<FilterAttribute> | undefined),\n            segmentFilterValue: undefined,\n\n            totalResultCount: undefined as (number | undefined),\n          }\n        },\n        watch: {\n          $route: function(newRoute) {\n              if (this.mountedFullPath == newRoute.fullPath) {\n                  this.updateTotalResultCount();\n              }\n          },\n        },\n        methods: {\n          hasAddPermission() {\n            const addPermission = this.$route.meta.permissionSpace + \":add\";\n            return (\n                this.account !== undefined &&\n                this.account.permissions.indexOf(addPermission) > -1\n            )\n          },\n          searchQueryChange(queryChangeEvent: CustomEvent) {\n            this.gridSearchQuery = queryChangeEvent.detail.value;\n          },\n          getListParameters() {\n            return {...this.gridParameters, ...this.listParameters};\n          },\n          updateGridParameters(params: any) {\n            this.gridParameters = {...this.gridParameters, ...params};\n          },\n          appliedFilterCount() {\n            let count = 0;\n            const exclusionFilters = this.getExclusionFilters()\n            const cleanedAttributes = this.filterAttributes!.filter((a: FilterAttribute) => exclusionFilters.indexOf(a.id) == -1);\n            for (const filterAttribute of cleanedAttributes) {\n              if (JSON.stringify(this.gridParameters[filterAttribute.id]) != JSON.stringify(filterAttribute.defaultValue)) count += 1;\n            }\n            return count;\n          },\n          updateTotalResultCount() {\n            if (this.totalResultCountPromise) {\n              return this.totalResultCountPromise().then((totalResultCount: number) => {\n                this.totalResultCount = totalResultCount;\n                return this.totalResultCount;\n              });\n            }\n\n            return this.service![this.listMethod](this.listParameters).then((result: AxiosResponse<any>) => {\n                this.totalResultCount = result.data.count;\n                return this.totalResultCount;\n            });\n          },\n          filterSegmenChanged(value: any) {\n            this.segmentFilterValue = value;\n            this.gridParameters[this.segmentFilter!.filterAttributeId] = value;\n          },\n          getExclusionFilters() {\n            const exclude = [];\n\n            if (this.segmentFilter) exclude.push(this.segmentFilter.filterAttributeId);\n\n            return exclude;\n          },\n          updateFilterAttributes() {\n            // Check for visible filter attributes\n            const filterAttributes = this.service!.filterAttributes;\n            return Promise.all(\n              filterAttributes.map((fa: FilterAttribute) => fa.visible)\n            ).then(filterAttributeVisibilities => {\n              this.filterAttributes = filterAttributes.filter((fa: FilterAttribute, idx: number) => filterAttributeVisibilities[idx]);\n            });\n          },\n        },\n        setup() {\n          const isFilterOpenRef = ref(false);\n          const setFilterDialogState = (newState: boolean) => { isFilterOpenRef.value = newState };\n\n          return {\n            isFilterOpenRef,\n            setFilterDialogState,\n          }\n        },\n        beforeMount() {\n          this.updateFilterAttributes().then(() => {\n            // Set default modal filter values\n            for (const filterAttribute of this.filterAttributes!) {\n              this.gridParameters[filterAttribute.id] = this.gridParameters[filterAttribute.id] || filterAttribute.defaultValue;\n            }\n          });\n\n          // Initialise segment filter\n          if (this.segmentFilter) this.segmentFilterValue = this.segmentFilter.default;\n\n          // Load account details\n          this.accountService.list().then(response => {\n              this.account = response.data.results[0];\n          });\n\n          // Set total result count\n          this.updateTotalResultCount();\n        },\n        mounted() {\n            this.mountedFullPath = this.$route.fullPath;\n        },\n    })\n</script>\n","<template>\n    <ion-page>\n        <ion-header :translucent=\"true\">\n            <ion-toolbar>\n                <ion-buttons slot=\"start\">\n                    <ion-button color=\"primary\" @click=\"resetFiltersAndCloseModal()\">Zurücksetzen</ion-button>\n                </ion-buttons>\n                <ion-buttons slot=\"end\">\n                    <ion-button color=\"primary\" @click=\"closeModal()\">Fertig</ion-button>\n                </ion-buttons>\n                <ion-title>Filter</ion-title>\n            </ion-toolbar>\n        </ion-header>\n        <ion-content :fullscreen=\"true\" v-if=\"localFilters\">\n            <ion-list>\n                <div v-for=\"filterAttribute in cleanFilterAttributes\" :key=\"filterAttribute.id\">\n\n                    <ion-item lines=\"full\" v-if=\"filterAttribute.type == 'boolean'\">\n                        <ion-label>{{ filterAttribute.label }}</ion-label>\n                        <ion-toggle\n                            @ionChange=\"updateFilter(filterAttribute, $event.srcElement.checked)\"\n                            :checked=\"localFilters[filterAttribute.id]\">\n                        </ion-toggle>\n                    </ion-item>\n\n                    <ion-item\n                        @click=\"openSelectModal(filterAttribute)\"\n                        lines=\"full\"\n                        v-if=\"filterAttribute.type == 'select'\"\n                        :detail=\"true\"\n                    >\n                        <ion-label>{{ filterAttribute.label }}</ion-label>\n\n                        <ion-note\n                            v-if=\"localFilters[filterAttribute.id] === undefined\"\n                            slot=\"end\"\n                        >Alle</ion-note>\n                        <ion-note\n                            v-else-if=\"localFilters[filterAttribute.id].length == 0\"\n                            slot=\"end\"\n                        >Keine</ion-note>\n                        <ion-note\n                            v-else\n                            slot=\"end\"\n                        >{{ localFilters[filterAttribute.id].length }}</ion-note>\n\n                        <ion-modal\n                            :is-open=\"selectModals[filterAttribute.id]\"\n                            @onDidDismiss=\"selectModals[filterAttribute.id] = false\"\n                        >\n                            <zeit-select\n                                :title=\"filterAttribute.label\"\n                                :remoteService=\"filterAttribute.remoteSourceService\"\n                                :selection=\"localFilters[filterAttribute.id]\"\n                                :multiple=\"filterAttribute.multiple\"\n                                :nullSelectable=\"filterAttribute.nullSelectable\"\n                                :nullLabel=\"filterAttribute.nullLabel\"\n                                @update:selection=\"updateFilter(filterAttribute, $event, true)\"\n                            />\n                        </ion-modal>\n                    </ion-item>\n\n                </div>\n            </ion-list>\n        </ion-content>\n    </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\n\nimport { IonModal, IonNote, IonPage, IonHeader, IonToolbar, IonButtons, IonButton, IonTitle, IonIcon, IonContent, IonList, IonItem, IonLabel, IonToggle, modalController } from '@ionic/vue';\nimport { FilterAttribute } from '../../services/_base';\nimport ZeitSelect from './ZeitSelect.vue';\n\nexport default defineComponent({\n    components: {\n        IonModal, IonNote, IonPage, IonHeader, IonToolbar, IonButtons, IonButton, IonTitle, IonContent, IonList, IonItem, IonLabel, IonToggle,\n\n        ZeitSelect,\n    },\n    props: {\n        service: Object,\n        filters: Object,\n        excludeFilters: {\n            type: Array,\n            default: () => { return [] }\n        },\n    },\n    data() {\n        return {\n            localFilters: undefined as any,\n            selectModals: {} as any,\n            cleanFilterAttributes: [] as Array<FilterAttribute>,\n        }\n    },\n    methods: {\n        closeModal() {\n            modalController.dismiss();\n        },\n        resetFilters() {\n            for (const filterAttribute of this.cleanFilterAttributes) {\n                let defaultValue = filterAttribute.defaultValue;\n                if (defaultValue) defaultValue = JSON.parse(JSON.stringify(defaultValue));\n\n                this.localFilters![filterAttribute.id] = defaultValue;\n            }\n        },\n        resetFiltersAndCloseModal() {\n            this.resetFilters();\n            this.$emit(\"onFilterUpdate\", this.localFilters);\n            this.closeModal();\n        },\n        updateFilter(filterAttribute: FilterAttribute, newValue: any, dismissModal=false) {\n            if (dismissModal) this.selectModals[filterAttribute.id] = false;\n\n            this.localFilters![filterAttribute.id] = newValue;\n            this.$emit(\"onFilterUpdate\", this.localFilters);\n        },\n        openSelectModal(filterAttribute: FilterAttribute) {\n            if (!(filterAttribute!.id in this.selectModals)) {\n                this.selectModals[filterAttribute!.id] = ref(false);\n            }\n\n            this.selectModals[filterAttribute!.id] = true;\n        },\n        updateFilterAttributes() {\n          // Check for visible filter attributes\n          const filterAttributes = this.service!.filterAttributes;\n          return Promise.all(\n            filterAttributes.map((fa: FilterAttribute) => fa.visible)\n          ).then(filterAttributeVisibilities => {\n            // Remove all attributes which are not visisble\n            let cleanFilterAttributes = filterAttributes.filter((fa: FilterAttribute, idx: number) => filterAttributeVisibilities[idx]);\n\n            // Remove all attributes explicitely marked as `excluded`\n            cleanFilterAttributes = cleanFilterAttributes.filter((a: FilterAttribute) => this.excludeFilters.indexOf(a.id) == -1)\n\n            this.cleanFilterAttributes = cleanFilterAttributes;\n          });\n        },\n    },\n    mounted() {\n        this.localFilters = JSON.parse(JSON.stringify(this.filters));\n        this.updateFilterAttributes();\n    }\n});\n</script>\n","<template>\n    <ion-page>\n        <ion-header :translucent=\"true\">\n            <ion-toolbar>\n                <ion-buttons slot=\"end\">\n                    <ion-button color=\"primary\" @click=\"submitLocalSelection()\">Fertig</ion-button>\n                </ion-buttons>\n                <ion-title>{{ title }}</ion-title>\n            </ion-toolbar>\n            <ion-toolbar>\n                <ion-searchbar\n                    :placeholder=\"searchPlaceholder\"\n                    animated\n                    @ion-change=\"searchQueryChange\"\n                />\n            </ion-toolbar>\n        </ion-header>\n        <ion-content :fullscreen=\"true\">\n            <zeit-grid\n                :service=\"remoteService\"\n                listMethod=\"listParams\"\n                :columns=\"fields\"\n                :searchQuery=\"searchQuery\"\n                :listParameters=\"{}\"\n                :showDetail=\"false\"\n                :selectable=\"true\"\n                :nullSelectable=\"nullSelectable\"\n                :nullLabel=\"nullLabel\"\n                :selection=\"localSelection\"\n                :refreshEnabled=\"false\"\n\n                @update:selection=\"updateLocalSelection($event)\"\n            />\n        </ion-content>\n    </ion-page>\n</template>\n\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nimport ZeitGrid from './ZeitGrid.vue';\n\nimport {\n    IonSearchbar, IonPage, IonHeader, IonToolbar, IonButtons, IonButton, IonTitle, IonContent, IonList, modalController,\n} from '@ionic/vue';\n\nexport default defineComponent({\n    components: {\n        IonSearchbar, IonPage, IonHeader, IonToolbar, IonButtons, IonButton, IonTitle, IonContent,\n\n        ZeitGrid,\n    },\n    props: {\n        title: String,\n        remoteService: Object,\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n        selection: {\n            type: Object,\n            default: undefined,\n        },\n        searchPlaceholder: {\n            type: String,\n            default: \"Suche\",\n        },\n        nullSelectable: {\n            type: Boolean,\n            default: false,\n        },\n        nullLabel: {\n            type: String,\n            default: 'Keine Auswahl',\n        },\n        updateSelection: Object,\n    },\n    computed: {\n        fields() {\n            return [\n                {\n                    id: 'name',\n                    label: 'Name',\n                    mobileLevel: 'h2',\n                },\n            ]\n        },\n    },\n    data() {\n        return {\n            searchQuery: '',\n            localSelection: undefined as any,\n        }\n    },\n    methods: {\n        searchQueryChange(queryChangeEvent: CustomEvent) {\n            this.searchQuery = queryChangeEvent.detail.value;\n        },\n        submitLocalSelection() {\n            this.$emit('update:selection', this.localSelection);\n        },\n        updateLocalSelection(selection: any) {\n            this.localSelection = selection;\n        },\n    },\n    beforeMount() {\n        if (this.selection !== undefined) {\n            this.localSelection = JSON.parse(JSON.stringify(this.selection));\n        }\n    }\n});\n\n</script>\n","\nimport { defineComponent } from 'vue';\n\nimport ZeitGrid from './ZeitGrid.vue';\n\nimport {\n    IonSearchbar, IonPage, IonHeader, IonToolbar, IonButtons, IonButton, IonTitle, IonContent, IonList, modalController,\n} from '@ionic/vue';\n\nexport default defineComponent({\n    components: {\n        IonSearchbar, IonPage, IonHeader, IonToolbar, IonButtons, IonButton, IonTitle, IonContent,\n\n        ZeitGrid,\n    },\n    props: {\n        title: String,\n        remoteService: Object,\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n        selection: {\n            type: Object,\n            default: undefined,\n        },\n        searchPlaceholder: {\n            type: String,\n            default: \"Suche\",\n        },\n        nullSelectable: {\n            type: Boolean,\n            default: false,\n        },\n        nullLabel: {\n            type: String,\n            default: 'Keine Auswahl',\n        },\n        updateSelection: Object,\n    },\n    computed: {\n        fields() {\n            return [\n                {\n                    id: 'name',\n                    label: 'Name',\n                    mobileLevel: 'h2',\n                },\n            ]\n        },\n    },\n    data() {\n        return {\n            searchQuery: '',\n            localSelection: undefined as any,\n        }\n    },\n    methods: {\n        searchQueryChange(queryChangeEvent: CustomEvent) {\n            this.searchQuery = queryChangeEvent.detail.value;\n        },\n        submitLocalSelection() {\n            this.$emit('update:selection', this.localSelection);\n        },\n        updateLocalSelection(selection: any) {\n            this.localSelection = selection;\n        },\n    },\n    beforeMount() {\n        if (this.selection !== undefined) {\n            this.localSelection = JSON.parse(JSON.stringify(this.selection));\n        }\n    }\n});\n\n","import { render } from \"./ZeitSelect.vue?vue&type=template&id=793e26ca\"\nimport script from \"./ZeitSelect.vue?vue&type=script&lang=ts\"\nexport * from \"./ZeitSelect.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { defineComponent, ref } from 'vue';\n\nimport { IonModal, IonNote, IonPage, IonHeader, IonToolbar, IonButtons, IonButton, IonTitle, IonIcon, IonContent, IonList, IonItem, IonLabel, IonToggle, modalController } from '@ionic/vue';\nimport { FilterAttribute } from '../../services/_base';\nimport ZeitSelect from './ZeitSelect.vue';\n\nexport default defineComponent({\n    components: {\n        IonModal, IonNote, IonPage, IonHeader, IonToolbar, IonButtons, IonButton, IonTitle, IonContent, IonList, IonItem, IonLabel, IonToggle,\n\n        ZeitSelect,\n    },\n    props: {\n        service: Object,\n        filters: Object,\n        excludeFilters: {\n            type: Array,\n            default: () => { return [] }\n        },\n    },\n    data() {\n        return {\n            localFilters: undefined as any,\n            selectModals: {} as any,\n            cleanFilterAttributes: [] as Array<FilterAttribute>,\n        }\n    },\n    methods: {\n        closeModal() {\n            modalController.dismiss();\n        },\n        resetFilters() {\n            for (const filterAttribute of this.cleanFilterAttributes) {\n                let defaultValue = filterAttribute.defaultValue;\n                if (defaultValue) defaultValue = JSON.parse(JSON.stringify(defaultValue));\n\n                this.localFilters![filterAttribute.id] = defaultValue;\n            }\n        },\n        resetFiltersAndCloseModal() {\n            this.resetFilters();\n            this.$emit(\"onFilterUpdate\", this.localFilters);\n            this.closeModal();\n        },\n        updateFilter(filterAttribute: FilterAttribute, newValue: any, dismissModal=false) {\n            if (dismissModal) this.selectModals[filterAttribute.id] = false;\n\n            this.localFilters![filterAttribute.id] = newValue;\n            this.$emit(\"onFilterUpdate\", this.localFilters);\n        },\n        openSelectModal(filterAttribute: FilterAttribute) {\n            if (!(filterAttribute!.id in this.selectModals)) {\n                this.selectModals[filterAttribute!.id] = ref(false);\n            }\n\n            this.selectModals[filterAttribute!.id] = true;\n        },\n        updateFilterAttributes() {\n          // Check for visible filter attributes\n          const filterAttributes = this.service!.filterAttributes;\n          return Promise.all(\n            filterAttributes.map((fa: FilterAttribute) => fa.visible)\n          ).then(filterAttributeVisibilities => {\n            // Remove all attributes which are not visisble\n            let cleanFilterAttributes = filterAttributes.filter((fa: FilterAttribute, idx: number) => filterAttributeVisibilities[idx]);\n\n            // Remove all attributes explicitely marked as `excluded`\n            cleanFilterAttributes = cleanFilterAttributes.filter((a: FilterAttribute) => this.excludeFilters.indexOf(a.id) == -1)\n\n            this.cleanFilterAttributes = cleanFilterAttributes;\n          });\n        },\n    },\n    mounted() {\n        this.localFilters = JSON.parse(JSON.stringify(this.filters));\n        this.updateFilterAttributes();\n    }\n});\n","import { render } from \"./ZeitListFilter.vue?vue&type=template&id=f873ba22\"\nimport script from \"./ZeitListFilter.vue?vue&type=script&lang=ts\"\nexport * from \"./ZeitListFilter.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\n    import { defineComponent, ref } from 'vue';\n\n    import { add, funnelOutline, funnel } from 'ionicons/icons';\n    import {\n        IonButtons, IonButton, IonIcon, IonContent, IonHeader, IonMenuButton,\n        IonPage, IonTitle, IonToolbar, IonSearchbar, IonModal, IonText, IonSegment,\n        IonSegmentButton,\n    } from '@ionic/vue';\n\n    import ZeitGrid from './ZeitGrid.vue';\n    import ZeitListFilter from './ZeitListFilter.vue';\n    import { FilterAttribute } from '../../services/_base';\n    import { Account, accountService } from '../../services/accounts';\n    import { AxiosResponse } from 'axios';\n\n    export default defineComponent({\n        components: {\n          IonButtons, IonButton, IonIcon, IonContent, IonHeader, IonMenuButton,\n          IonPage, IonTitle, IonToolbar, IonSearchbar, IonModal, IonText, IonSegment,\n          IonSegmentButton,\n\n          ZeitGrid, ZeitListFilter,\n        },\n        props: {\n          resourceType: String,\n          basePath: String,\n          searchPlaceholder: String,\n          service: Object,\n          fields: Array,\n\n          totalResultCountPromise: {\n            type: Function,\n            default: undefined,\n          },\n\n          listParameters: {\n              type: Object,\n              default: () => {return {}},\n          },\n\n          segmentFilter: Object,\n\n          showSearch: { type: Boolean, default: true},\n          showDetail: { type: Boolean, default: true},\n        },\n        data() {\n          return {\n            accountService,\n\n            add,\n            funnel,\n            funnelOutline,\n            gridSearchQuery: '',\n            gridParameters: {} as any,\n\n            mountedFullPath: undefined as (string | undefined),\n\n            listMethod: 'listParams',\n\n            account: undefined as Account | undefined,\n\n            filterAttributes: undefined as (Array<FilterAttribute> | undefined),\n            segmentFilterValue: undefined,\n\n            totalResultCount: undefined as (number | undefined),\n          }\n        },\n        watch: {\n          $route: function(newRoute) {\n              if (this.mountedFullPath == newRoute.fullPath) {\n                  this.updateTotalResultCount();\n              }\n          },\n        },\n        methods: {\n          hasAddPermission() {\n            const addPermission = this.$route.meta.permissionSpace + \":add\";\n            return (\n                this.account !== undefined &&\n                this.account.permissions.indexOf(addPermission) > -1\n            )\n          },\n          searchQueryChange(queryChangeEvent: CustomEvent) {\n            this.gridSearchQuery = queryChangeEvent.detail.value;\n          },\n          getListParameters() {\n            return {...this.gridParameters, ...this.listParameters};\n          },\n          updateGridParameters(params: any) {\n            this.gridParameters = {...this.gridParameters, ...params};\n          },\n          appliedFilterCount() {\n            let count = 0;\n            const exclusionFilters = this.getExclusionFilters()\n            const cleanedAttributes = this.filterAttributes!.filter((a: FilterAttribute) => exclusionFilters.indexOf(a.id) == -1);\n            for (const filterAttribute of cleanedAttributes) {\n              if (JSON.stringify(this.gridParameters[filterAttribute.id]) != JSON.stringify(filterAttribute.defaultValue)) count += 1;\n            }\n            return count;\n          },\n          updateTotalResultCount() {\n            if (this.totalResultCountPromise) {\n              return this.totalResultCountPromise().then((totalResultCount: number) => {\n                this.totalResultCount = totalResultCount;\n                return this.totalResultCount;\n              });\n            }\n\n            return this.service![this.listMethod](this.listParameters).then((result: AxiosResponse<any>) => {\n                this.totalResultCount = result.data.count;\n                return this.totalResultCount;\n            });\n          },\n          filterSegmenChanged(value: any) {\n            this.segmentFilterValue = value;\n            this.gridParameters[this.segmentFilter!.filterAttributeId] = value;\n          },\n          getExclusionFilters() {\n            const exclude = [];\n\n            if (this.segmentFilter) exclude.push(this.segmentFilter.filterAttributeId);\n\n            return exclude;\n          },\n          updateFilterAttributes() {\n            // Check for visible filter attributes\n            const filterAttributes = this.service!.filterAttributes;\n            return Promise.all(\n              filterAttributes.map((fa: FilterAttribute) => fa.visible)\n            ).then(filterAttributeVisibilities => {\n              this.filterAttributes = filterAttributes.filter((fa: FilterAttribute, idx: number) => filterAttributeVisibilities[idx]);\n            });\n          },\n        },\n        setup() {\n          const isFilterOpenRef = ref(false);\n          const setFilterDialogState = (newState: boolean) => { isFilterOpenRef.value = newState };\n\n          return {\n            isFilterOpenRef,\n            setFilterDialogState,\n          }\n        },\n        beforeMount() {\n          this.updateFilterAttributes().then(() => {\n            // Set default modal filter values\n            for (const filterAttribute of this.filterAttributes!) {\n              this.gridParameters[filterAttribute.id] = this.gridParameters[filterAttribute.id] || filterAttribute.defaultValue;\n            }\n          });\n\n          // Initialise segment filter\n          if (this.segmentFilter) this.segmentFilterValue = this.segmentFilter.default;\n\n          // Load account details\n          this.accountService.list().then(response => {\n              this.account = response.data.results[0];\n          });\n\n          // Set total result count\n          this.updateTotalResultCount();\n        },\n        mounted() {\n            this.mountedFullPath = this.$route.fullPath;\n        },\n    })\n","import { render } from \"./ZeitList.vue?vue&type=template&id=7fffc629\"\nimport script from \"./ZeitList.vue?vue&type=script&lang=ts\"\nexport * from \"./ZeitList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n    <span>\n        <ion-skeleton-text v-if=\"!isSolved\" :style=\"getPlaceholderStyle()\" animated></ion-skeleton-text>\n        {{ value }}\n    </span>\n</template>\n\n<style scoped>\n    ion-skeleton-text {\n        margin: 0 !important;\n        padding: 2px 0;\n    }\n</style>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue';\n\n    import { IonSkeletonText } from '@ionic/vue';\n\n    export default defineComponent({\n        components: {\n            IonSkeletonText,\n        },\n        props: {\n            promise: Object,\n            width: {\n                type: String,\n                default: '40px',\n            },\n        },\n        data() {\n            return {\n                isSolved: false,\n                value: undefined,\n            }\n        },\n        methods: {\n            getPlaceholderStyle() {\n                return {\n                    width: this.width,\n                    display: 'inline-block',\n                }\n            },\n        },\n        mounted() {\n            this.promise!.then((result: any) => {\n                this.value = result;\n                this.isSolved = true;\n            });\n        }\n    });\n</script>\n","\n    import { defineComponent } from 'vue';\n\n    import { IonSkeletonText } from '@ionic/vue';\n\n    export default defineComponent({\n        components: {\n            IonSkeletonText,\n        },\n        props: {\n            promise: Object,\n            width: {\n                type: String,\n                default: '40px',\n            },\n        },\n        data() {\n            return {\n                isSolved: false,\n                value: undefined,\n            }\n        },\n        methods: {\n            getPlaceholderStyle() {\n                return {\n                    width: this.width,\n                    display: 'inline-block',\n                }\n            },\n        },\n        mounted() {\n            this.promise!.then((result: any) => {\n                this.value = result;\n                this.isSolved = true;\n            });\n        }\n    });\n","import { render } from \"./ZeitPromiseSolver.vue?vue&type=template&id=edc77cd2&scoped=true\"\nimport script from \"./ZeitPromiseSolver.vue?vue&type=script&lang=ts\"\nexport * from \"./ZeitPromiseSolver.vue?vue&type=script&lang=ts\"\n\nimport \"./ZeitPromiseSolver.vue?vue&type=style&index=0&id=edc77cd2&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-edc77cd2\"\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n"],"sourceRoot":""}