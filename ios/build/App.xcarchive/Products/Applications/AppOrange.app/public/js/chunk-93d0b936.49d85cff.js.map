{"version":3,"sources":["webpack:///./src/views/UserAccount.vue?ed63","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/services/employee-groups.ts","webpack:///./src/services/physical-tokens.ts","webpack:///./src/services/employees.ts","webpack:///./src/views/UserAccount.vue","webpack:///./src/components/ui/ZeitSimpleItem.vue","webpack:///./src/components/ui/ZeitSimpleItem.vue?7dee","webpack:///./src/components/ui/ZeitSimpleItem.vue?0dac","webpack:///./src/views/UserAccount.vue?c7e7","webpack:///./src/views/UserAccount.vue?96ec"],"names":["_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","i","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","EmployeeGroupService","formFields","autofocus","mobileType","cacheTimeout","resourceId","Promise","resolve","params","pagesize","page","query","url","String","encodeURIComponent","ids","join","this","_get","employeeGroupService","PhysicalTokenService","fields","_post","additionalCardNumber","physicalTokenService","EmployeeService","type","remoteSourceService","remoteSourceAttribute","description","remoteSourceListMethod","listPageSize","id","concat","name","isReadOnly","showCreate","archivedFormFields","filterAttributes","visible","listParams","showArchived","then","response","data","count","multiple","resource","first_name","last_name","retrieve","employeeResponse","can_be_deleted","archived_at","categoryId","settingId","retrieveSettings","employeeSettings","retrieveSettingValue","newSettings","employeeGroups","verbosity","minimumAbsenceCount","absenceDaterange","useCache","employeeService","class","translucent","fullscreen","slot","loadData","$event","collapse","size","color","isLoaded","label","employee","email","institution","lines","physical_token_id","employeeGroup","weeklyWorkingTime","workingDays","button","logout","position","isLoading","disabled","props","Boolean","default","components","IonItem","IonLabel","IonInput","IonSkeletonText","render","IonPage","IonHeader","IonTitle","IonSpinner","IonContent","IonToolbar","IonText","IonList","IonRefresher","IonRefresherContent","ZeitSimpleItem","now","accountService","institutionService","branding","account","methods","$router","replace","event","clearCache","all","list","accountResponse","institutionResponse","results","employee_id","employee_group_id","result","Mon","Tue","Wed","Thu","Fri","Sat","Sun","target","complete","beforeMount","__scopeId"],"mappings":"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","file":"js/chunk-93d0b936.49d85cff.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./UserAccount.vue?vue&type=style&index=0&id=670760dd&scoped=true&lang=css\"","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import {BaseService, FormField} from './_base';\n\n\ninterface EmployeeGroup {\n    id: string;\n    name: string;\n    employee_count: number;\n}\n\n\ninterface EmployeeGroupListParams {\n    page?: number;\n    pagesize?: number;\n    query?: string;\n    ids?: Array<string>;\n}\n\n\nclass EmployeeGroupService extends BaseService<EmployeeGroup> {\n    constructor() {\n        super(\"/api/v2/employees/groups/\");\n        this.formFields = [\n            new FormField(\"name\", \"Abteilungsname\", { autofocus: true, mobileType: 'stacked'}),\n        ];\n\n        this.cacheTimeout = 60 * 60 * 24 * 14;\n    }\n\n    newResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Abteilung hinzufügen\") }\n    newResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Abteilung hinzugefügt\") }\n    deleteResourceMethod(resourceId?: string): Promise<string> { return Promise.resolve(\"delete\") }\n    deleteResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Entfernen\") }\n    deleteResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Abteilung entfernt\") }\n\n    listParams(params: EmployeeGroupListParams) {\n        const pagesize = params.pagesize || 50;\n        const page = params.page || 1;\n        const query = params.query || '';\n\n        let url =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n            if (params.ids) url += \"&ids=\" + params.ids.join(\"|\");\n\n        return this._get(url);\n    }\n}\n\nconst employeeGroupService = new EmployeeGroupService();\n\nexport { EmployeeGroup, EmployeeGroupService, employeeGroupService }\n\nexport default employeeGroupService;\n","import { AxiosResponse } from 'axios';\nimport { BaseService, PaginatedResponse } from './_base';\n\n\ninterface PhysicalToken {\n    id: string;\n}\n\ninterface PhysicalTokenListParams {\n    page?: number;\n    pagesize?: number;\n\n    query?: string;\n    ids?: Array<string>;\n\n    fields?: Array<string>;\n}\n\n\nclass PhysicalTokenService extends BaseService<PhysicalToken> {\n    constructor() {\n        super(\"/api/v2/devices/physical-tokens/\");\n        this.cacheTimeout = 60 * 60 * 24 * 14;\n    }\n\n    list(this: PhysicalTokenService, page=1, pagesize=1000, query=''): Promise<AxiosResponse<PaginatedResponse<PhysicalToken>>> {\n        const params =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n        return this._get(params) as unknown as Promise<AxiosResponse<PaginatedResponse<PhysicalToken>>>;\n    }\n\n    listParams(this: PhysicalTokenService, params: PhysicalTokenListParams): Promise<PaginatedResponse<PhysicalToken>> {\n        params = params || {};\n\n        params.pagesize = params.pagesize || 1000;\n        params.page = params.page || 1;\n        params.query = params.query || '';\n        params.fields = params.fields || ['id'];\n        params.ids = params.ids || [];\n\n        const query =\n            '?limit=' + String(params.pagesize) +\n            '&offset=' + String((params.page - 1) * params.pagesize) +\n            '&q=' + encodeURIComponent(String(params.query)) +\n            '&fields=' + params.fields.join(\"|\") +\n            '&ids=' + params.ids.join(\"|\");\n\n        return this._get(query) as unknown as Promise<PaginatedResponse<PhysicalToken>>;\n    }\n\n    listCreate(this: PhysicalTokenService, ids: Array<string>) {\n        return this._post('', {ids, });\n    }\n\n    listDelete(this: PhysicalTokenService, ids: Array<string>) {\n        return this._post('delete/', {ids, });\n    }\n\n    listAvailable(page=1, pagesize=50, query='', additionalCardNumber=''): Promise<PaginatedResponse<PhysicalToken>> {\n        const params =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&type=available' +\n            '&q=' + encodeURIComponent(String(query)) +\n            '&additional=' + String(additionalCardNumber);\n\n        return this._get(params) as unknown as Promise<PaginatedResponse<PhysicalToken>>;\n    }\n}\n\nconst physicalTokenService = new PhysicalTokenService();\n\nexport { physicalTokenService, PhysicalTokenService, PhysicalToken }\n\nexport default physicalTokenService;\n","import { BaseService, FormField, FilterAttribute, PaginatedResponse } from './_base';\n\nimport { employeeGroupService, EmployeeGroup } from './employee-groups';\nimport { physicalTokenService, PhysicalToken } from './physical-tokens';\nimport { institutionService } from './institutions';\n\nimport branding from '../branding';\nimport { AxiosResponse } from 'axios';\n\ninterface Employee {\n    id: string;\n    created_at: string;\n    modified_at: string;\n    archived_at?: string;\n    username: string;\n    user_account_id: string;\n    employee_group_id?: string;\n    external_id?: string;\n    accounting_number?: string;\n    employee_group_name?: string;\n    is_male: boolean;\n    first_name: string;\n    last_name: string;\n    email?: string;\n    initial_password: string;\n    physical_token_id?: string;\n    can_be_deleted: boolean;\n    delete_after_archive_period?: number;\n}\n\ninterface EmployeesListParams {\n    page?: number;\n    pagesize?: number;\n    query?: string;\n    useCache?: boolean;\n\n    verbosity?: string;\n\n    ids?: Array<string>;\n    employeeGroups?: Array<string>;\n    showArchived?: boolean;\n    minimumAbsenceCount?: number;\n    absenceDaterange?: string;\n}\n\n\nclass EmployeeService extends BaseService<Employee> {\n    archivedFormFields: Array<FormField<any>>;\n\n    constructor() {\n        super(\"/api/v2/employees/employees/\");\n        this.formFields = [\n            new FormField<Employee>(\"first_name\", \"Vorname\", {autofocus: true}),\n            new FormField<Employee>(\"last_name\", \"Nachname\"),\n            new FormField<Employee>(\"email\", \"E-Mail-Adresse\", {\n                mobileType: \"stacked\",\n            }),\n            new FormField<EmployeeGroup>(\"employee_group_id\", \"Abteilung\", {\n                type: 'select',\n                remoteSourceService: employeeGroupService,\n                remoteSourceAttribute: \"name\"\n            }),\n            new FormField<PhysicalToken>(\"physical_token_id\", \"Token-Nummer\", {\n                type: 'select',\n                description: \"Die ausgewählte Token-Nummer kann zur Authentifizierung am Zeiterfassungs-Terminal verwendet werden. Nur nicht bereits zugewiesene Nummern werden angezeigt. <a target='_blank' href='/tokens/'>Token verwalten</a>\",\n                remoteSourceService: physicalTokenService,\n                remoteSourceListMethod: \"listAvailable\",\n                remoteSourceAttribute: 'id',\n                listPageSize: 1000,\n            }),\n            new FormField<Employee>(\"accounting_number\", \"Personalnummer\", { mobileType: 'stacked', description: \"Die Personalnummer wird verwendet, um den Mitarbeiter im Buchhaltungsexport zu identifizieren.\"}),\n        ];\n        if (branding.id == \"orange\")\n            this.formFields.push(new FormField<Employee>(\"external_id\", \"aQrate Benutzername\", { mobileType: 'stacked', description:  \"Der Benutzername wird verwendet, um diesen Zeitblick Mitarbeiter einem aQrate Mitarbeiter bei Authentifizierung am MFP zuzuordnen.\"}));\n        this.formFields = this.formFields.concat([\n            new FormField<Employee>(\"username\", branding.name + \" Benutzername\", {\n                mobileType: 'stacked',\n                description: \"Der Benutzername wird vom Mitarbeiter benötigt, um sich gegenüber der \" + branding.name + \" Smartphone App und dem Web-Login (https://\" + branding.url + \"/) zu authentifizieren.\",\n                isReadOnly: true,\n                showCreate: false,\n            }),\n            new FormField<Employee>(\"initial_password\", \"Vorläufiges Passwort\", { mobileType: 'stacked', isReadOnly: true, showCreate: false, }),\n        ]);\n\n        this.archivedFormFields = [\n            new FormField<Employee>(\"first_name\", \"Vorname\", {isReadOnly: true}),\n            new FormField<Employee>(\"last_name\", \"Nachname\", { isReadOnly: true }),\n            new FormField<Employee>(\"email\", \"E-Mail-Adresse\", { isReadOnly: true }),\n            new FormField<EmployeeGroup>(\"employee_group_id\", \"Abteilung\", {\n                type: 'select',\n                remoteSourceService: employeeGroupService,\n                remoteSourceAttribute: \"name\",\n                isReadOnly: true,\n            }),\n            new FormField<Employee>(\"accounting_id\", \"Personalnummer\", { description: \"Die Personalnummer wird verwendet, um den Mitarbeiter im Buchhaltungsexport zu identifizieren.\" , isReadOnly: true}),\n        ];\n        if (branding.id == \"orange\")\n            this.archivedFormFields.push(new FormField<Employee>(\"external_id\", \"aQrate Benutzername\", { description: \"Der Benutzername wird verwendet, um diesen Zeitblick Mitarbeiter einem aQrate Mitarbeiter bei Authentifizierung am MFP zuzuordnen.\", isReadOnly: true }));\n\n        this.filterAttributes = [\n            new FilterAttribute(\"showArchived\", \"Archivierte Mitarbeiter anzeigen\", \"boolean\", false, {\n                visible: this.listParams({ showArchived: true}).then((response: AxiosResponse<PaginatedResponse<EmployeeGroup>>) => {\n                    return response.data.count > 0;\n                }),\n            }),\n            new FilterAttribute(\"employeeGroups\", \"Abteilungen\", \"select\", undefined, {\n                multiple: true,\n                remoteSourceService: employeeGroupService,\n                visible: employeeGroupService.listParams({}).then((response: AxiosResponse<PaginatedResponse<EmployeeGroup>>) => {\n                    return response.data.count > 0;\n                }),\n            }),\n        ];\n\n        this.cacheTimeout = 60 * 60 * 24 * 14;\n    }\n\n    titleAttribute(): Promise<any> { return Promise.resolve((resource: any) => resource.first_name + \" \" + resource.last_name) }\n    newResourceTitle(resourceId?: string): Promise<string> { return Promise.resolve(\"Mitarbeiter hinzufügen\") }\n    newResourceConfirmation(resourceId?: string): Promise<string> { return Promise.resolve(\"Mitarbeiter hinzugefügt\") }\n\n    deleteResourceMethod(resourceId?: string): Promise<string> {\n        if (!resourceId) return Promise.resolve('');\n\n        return this.retrieve(resourceId).then(employeeResponse => {\n            if (employeeResponse.data.can_be_deleted) {\n                return Promise.resolve(\"delete\");\n            } else if (!employeeResponse.data.archived_at) {\n                return Promise.resolve(\"archive\");\n            }\n\n            return Promise.resolve('');\n        });\n    }\n    deleteResourceTitle(resourceId?: string): Promise<string> {\n        if (!resourceId) return Promise.resolve(\"Entfernen\");\n\n        return this.retrieve(resourceId).then(employeeResponse => {\n            if (employeeResponse.data.can_be_deleted) {\n                return Promise.resolve(\"Entfernen\");\n            } else if (!employeeResponse.data.archived_at) {\n                return Promise.resolve(\"Archivieren\");\n            }\n\n            return Promise.resolve('');\n        });\n    }\n    deleteResourceConfirmation(resourceId?: string): Promise<string> {\n        if (!resourceId) return Promise.resolve(\"Mitarbeiter entfernt\");\n\n        return this.retrieve(resourceId).then(employeeResponse => {\n            if (employeeResponse.data.can_be_deleted) {\n                return Promise.resolve(\"Mitarbeiter entfernt\");\n            } else if (!employeeResponse.data.archived_at) {\n                return Promise.resolve(\"Mitarbeiter archiviert\");\n            }\n\n            return Promise.resolve('');\n        });\n    }\n\n    async retrieveSettingValue(resourceId: string, categoryId: string, settingId: string): Promise<any> {\n        const employeeSettings = (await this.retrieveSettings(resourceId)).data;\n        if (categoryId in employeeSettings && settingId in employeeSettings[categoryId]) {\n            return employeeSettings[categoryId][settingId]\n        }\n\n        return institutionService.retrieveSettingValue(categoryId, settingId);\n\n    }\n\n    retrieveSettings(resourceId: string): Promise<AxiosResponse<any>> {\n        return this._get(resourceId + \"/settings/\") as unknown as Promise<AxiosResponse<any>>;\n    }\n\n    updateSettings(resourceId: string, newSettings: any) {\n        return this._post(resourceId + \"/settings/\", newSettings);\n    }\n\n    resetPassword(resourceId: string) {\n        return this._post(resourceId + \"/reset-password/\", {});\n    }\n\n    list(page=1, pagesize=50, query='', employeeGroups?: string, showArchived?: boolean) {\n        let params =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n        if (employeeGroups != undefined) {\n            params = params + '&employee_groups=' + employeeGroups;\n        }\n\n        if (showArchived === true) {\n            params = params + '&archived';\n        }\n\n        return this._get(params);\n    }\n\n    listParams(params: EmployeesListParams) {\n        const pagesize = params.pagesize || 50;\n        const page = params.page || 1;\n        const query = params.query || '';\n\n        let url =\n            '?limit=' + String(pagesize) +\n            '&offset=' + String((page - 1) * pagesize) +\n            '&q=' + encodeURIComponent(String(query));\n\n        if (params.verbosity) url += \"&verbosity=\" + params.verbosity;\n        if (params.ids) url += \"&ids=\" + params.ids.join(\"|\");\n        if (params.employeeGroups) url += \"&employee_groups=\" + params.employeeGroups.join(\"|\");\n        if (params.showArchived === true) url = url + '&archived';\n        if (params.minimumAbsenceCount) url = url + '&absence_count__gte=' + String(params.minimumAbsenceCount);\n        if (params.absenceDaterange) url = url + '&absence_daterange=' + params.absenceDaterange;\n\n        return this._get(url, params.useCache !== false);\n    }\n\n    archive(resourceId: string) {\n        return this._post(resourceId + \"/archive/\", {});\n    }\n}\n\nconst employeeService = new EmployeeService();\n\nexport { EmployeeService, employeeService, Employee };\n\nexport default employeeService;\n","<template>\n  <ion-page>\n    <ion-header :translucent=\"true\">\n      <ion-toolbar>\n        <ion-title>Dein Konto</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content :fullscreen=\"true\">\n      <ion-refresher slot=\"fixed\" @ionRefresh=\"loadData($event)\">\n        <ion-refresher-content></ion-refresher-content>\n      </ion-refresher>\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">Dein Konto</ion-title>\n        </ion-toolbar>\n        <ion-toolbar class=\"px-3 pb-4\">\n          <ion-text color=\"medium\">\n            Folgende Daten sind zu deiner Person gespeichert. Bitte kontaktiere\n            für Änderungen deinen Vorgesetzten.\n          </ion-text>\n        </ion-toolbar>\n      </ion-header>\n\n      <template v-if=\"isLoaded\">\n        <ion-list>\n          <zeit-simple-item label=\"Vorname\" :value=\"employee.first_name\" />\n          <zeit-simple-item label=\"Nachname\" :value=\"employee.last_name\" />\n          <zeit-simple-item label=\"Email\" :value=\"employee.email\" v-if=\"employee.email\" />\n          <zeit-simple-item label=\"Unternehmen\" :value=\"institution.name\" lines=\"full\" />\n        </ion-list>\n\n        <ion-item lines=\"full\" class=\"transparent-bg\" />\n\n        <ion-list>\n          <zeit-simple-item v-if=\"employee\" label=\"Kartennummer\" :value=\"employee.physical_token_id\" />\n          <zeit-simple-item v-if=\"employeeGroup\" label=\"Abteilung\" :value=\"employeeGroup.name\" />\n          <zeit-simple-item label=\"Wochenarbeitszeit\" :value=\"weeklyWorkingTime + ' Stunden'\" />\n          <zeit-simple-item label=\"Arbeitstage\" :value=\"workingDays\" lines=\"full\" />\n        </ion-list>\n\n        <ion-item lines=\"full\" class=\"transparent-bg\" />\n\n        <ion-item lines=\"full\" button @click=\"logout()\">\n          <ion-label color=\"danger\">Benutzer abmelden</ion-label>\n        </ion-item>\n\n        <ion-item lines=\"none\" class=\"transparent-bg\" />\n      </template>\n\n      <ion-item v-if=\"!isLoaded\" lines=\"none\" class=\"transparent-bg\">\n        <div class=\"w-full flex items-center justify-center mt-8\"><ion-spinner /></div>\n      </ion-item>\n\n    </ion-content>\n  </ion-page>\n</template>\n\n<style scoped>\n  ion-item.transparent-bg {\n    --background: transparent;\n  }\n</style>\n\n<script lang=\"ts\">\n  import { defineComponent } from 'vue';\n  import {\n    IonPage, IonHeader, IonTitle, IonLabel, IonSpinner,\n    IonContent, IonToolbar, IonItem, IonText, IonList,\n\n    IonRefresher, IonRefresherContent,\n\n  } from '@ionic/vue';\n\n\n  import { accountService, Account } from '../services/accounts';\n  import { institutionService, Institution } from '../services/institutions';\n  import { Employee, employeeService } from '../services/employees';\n\n  import branding from '../branding';\n\n  import { EmployeeGroup, employeeGroupService } from '../services/employee-groups';\n  import ZeitSimpleItem from '../components/ui/ZeitSimpleItem.vue';\n\n  export default defineComponent({\n    components: {\n        IonPage, IonHeader, IonTitle, IonLabel, IonSpinner,\n        IonContent, IonToolbar, IonItem, IonText, IonList,\n\n        IonRefresher, IonRefresherContent,\n\n        ZeitSimpleItem,\n    },\n    data() {\n      return {\n        now: undefined as Date|undefined,\n        isLoaded: false,\n\n        accountService,\n        employeeService,\n        institutionService,\n        employeeGroupService,\n\n        branding,\n\n        account: undefined as Account|undefined,\n        institution: undefined as Institution|undefined,\n        employee: undefined as Employee|undefined,\n        employeeGroup: undefined as EmployeeGroup|undefined,\n\n        // Settings\n        weeklyWorkingTime: undefined as number|undefined,\n        workingDays: undefined as string|undefined,\n      }\n    },\n    // watch: {},\n    methods: {\n      logout() {\n        this.accountService.logout();\n        this.$router.replace({name:'authentication:login'});\n      },\n\n      async loadData(event?: any) {\n        if (event) {\n          this.accountService.clearCache();\n          this.institutionService.clearCache();\n          this.employeeService.clearCache();\n          this.employeeGroupService.clearCache();\n        }\n\n        const [accountResponse, institutionResponse] = await Promise.all([\n          this.accountService.list(),\n          this.institutionService.list(),\n        ]);\n        this.account = accountResponse.data.results[0];\n        this.institution = institutionResponse.data.results[0];\n\n        // Employee promise\n        if (this.account.employee_id) {\n          this.employee = (await this.employeeService.retrieve(this.account.employee_id)).data;\n        }\n\n        if (this.employee && this.employee.employee_group_id) {\n          this.employeeGroup = (await this.employeeGroupService.retrieve(this.employee.employee_group_id)).data;\n        }\n\n        if (this.employee) {\n          [this.weeklyWorkingTime, this.workingDays] = await Promise.all([\n            this.employeeService.retrieveSettingValue(this.employee.id, 'working_session', 'weekly_working_time'),\n            this.employeeService.retrieveSettingValue(this.employee.id, 'working_session', 'working_days').then((result: any) => {\n              const workingDays = [];\n              if (result.Mon) workingDays.push(\"Mo\");\n              if (result.Tue) workingDays.push(\"Di\");\n              if (result.Wed) workingDays.push(\"Mi\");\n              if (result.Thu) workingDays.push(\"Do\");\n              if (result.Fri) workingDays.push(\"Fr\");\n              if (result.Sat) workingDays.push(\"Sa\");\n              if (result.Sun) workingDays.push(\"So\");\n              return workingDays.join(\", \");\n            }),\n          ]);\n        }\n\n        // Stop refresher\n        if (event && event.target && event.target.complete) event.target.complete();\n        this.isLoaded = true;\n      },\n    },\n    beforeMount() {\n      this.isLoaded = false;\n      this.loadData();\n    },\n  });\n</script>\n","<template>\n    <ion-item :lines=\"lines\">\n      <ion-label position=\"stacked\">{{ label }}</ion-label>\n      <ion-input disabled v-if=\"!isLoading\">{{ value }}</ion-input>\n      <ion-input disabled v-if=\"isLoading\"><ion-skeleton-text /></ion-input>\n    </ion-item>\n</template>\n\n\n<script lang=\"ts\">\n  import { defineComponent } from 'vue';\n\n  import {\n    IonItem, IonLabel, IonInput, IonSkeletonText,\n  } from '@ionic/vue';\n\n  export default defineComponent({\n    props: {\n      label: String,\n      value: String,\n      lines: String,\n      isLoading: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    components: {\n      IonItem, IonLabel, IonInput, IonSkeletonText,\n    },\n  });\n</script>\n","\n  import { defineComponent } from 'vue';\n\n  import {\n    IonItem, IonLabel, IonInput, IonSkeletonText,\n  } from '@ionic/vue';\n\n  export default defineComponent({\n    props: {\n      label: String,\n      value: String,\n      lines: String,\n      isLoading: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    components: {\n      IonItem, IonLabel, IonInput, IonSkeletonText,\n    },\n  });\n","import { render } from \"./ZeitSimpleItem.vue?vue&type=template&id=12ee0ab8\"\nimport script from \"./ZeitSimpleItem.vue?vue&type=script&lang=ts\"\nexport * from \"./ZeitSimpleItem.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\n  import { defineComponent } from 'vue';\n  import {\n    IonPage, IonHeader, IonTitle, IonLabel, IonSpinner,\n    IonContent, IonToolbar, IonItem, IonText, IonList,\n\n    IonRefresher, IonRefresherContent,\n\n  } from '@ionic/vue';\n\n\n  import { accountService, Account } from '../services/accounts';\n  import { institutionService, Institution } from '../services/institutions';\n  import { Employee, employeeService } from '../services/employees';\n\n  import branding from '../branding';\n\n  import { EmployeeGroup, employeeGroupService } from '../services/employee-groups';\n  import ZeitSimpleItem from '../components/ui/ZeitSimpleItem.vue';\n\n  export default defineComponent({\n    components: {\n        IonPage, IonHeader, IonTitle, IonLabel, IonSpinner,\n        IonContent, IonToolbar, IonItem, IonText, IonList,\n\n        IonRefresher, IonRefresherContent,\n\n        ZeitSimpleItem,\n    },\n    data() {\n      return {\n        now: undefined as Date|undefined,\n        isLoaded: false,\n\n        accountService,\n        employeeService,\n        institutionService,\n        employeeGroupService,\n\n        branding,\n\n        account: undefined as Account|undefined,\n        institution: undefined as Institution|undefined,\n        employee: undefined as Employee|undefined,\n        employeeGroup: undefined as EmployeeGroup|undefined,\n\n        // Settings\n        weeklyWorkingTime: undefined as number|undefined,\n        workingDays: undefined as string|undefined,\n      }\n    },\n    // watch: {},\n    methods: {\n      logout() {\n        this.accountService.logout();\n        this.$router.replace({name:'authentication:login'});\n      },\n\n      async loadData(event?: any) {\n        if (event) {\n          this.accountService.clearCache();\n          this.institutionService.clearCache();\n          this.employeeService.clearCache();\n          this.employeeGroupService.clearCache();\n        }\n\n        const [accountResponse, institutionResponse] = await Promise.all([\n          this.accountService.list(),\n          this.institutionService.list(),\n        ]);\n        this.account = accountResponse.data.results[0];\n        this.institution = institutionResponse.data.results[0];\n\n        // Employee promise\n        if (this.account.employee_id) {\n          this.employee = (await this.employeeService.retrieve(this.account.employee_id)).data;\n        }\n\n        if (this.employee && this.employee.employee_group_id) {\n          this.employeeGroup = (await this.employeeGroupService.retrieve(this.employee.employee_group_id)).data;\n        }\n\n        if (this.employee) {\n          [this.weeklyWorkingTime, this.workingDays] = await Promise.all([\n            this.employeeService.retrieveSettingValue(this.employee.id, 'working_session', 'weekly_working_time'),\n            this.employeeService.retrieveSettingValue(this.employee.id, 'working_session', 'working_days').then((result: any) => {\n              const workingDays = [];\n              if (result.Mon) workingDays.push(\"Mo\");\n              if (result.Tue) workingDays.push(\"Di\");\n              if (result.Wed) workingDays.push(\"Mi\");\n              if (result.Thu) workingDays.push(\"Do\");\n              if (result.Fri) workingDays.push(\"Fr\");\n              if (result.Sat) workingDays.push(\"Sa\");\n              if (result.Sun) workingDays.push(\"So\");\n              return workingDays.join(\", \");\n            }),\n          ]);\n        }\n\n        // Stop refresher\n        if (event && event.target && event.target.complete) event.target.complete();\n        this.isLoaded = true;\n      },\n    },\n    beforeMount() {\n      this.isLoaded = false;\n      this.loadData();\n    },\n  });\n","import { render } from \"./UserAccount.vue?vue&type=template&id=670760dd&scoped=true\"\nimport script from \"./UserAccount.vue?vue&type=script&lang=ts\"\nexport * from \"./UserAccount.vue?vue&type=script&lang=ts\"\n\nimport \"./UserAccount.vue?vue&type=style&index=0&id=670760dd&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-670760dd\"\n\nexport default script"],"sourceRoot":""}